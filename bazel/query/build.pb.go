// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.27.3
// source: bazel/query/build.proto

package query

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FilesetEntry_SymlinkBehavior int32

const (
	FilesetEntry_COPY        FilesetEntry_SymlinkBehavior = 1
	FilesetEntry_DEREFERENCE FilesetEntry_SymlinkBehavior = 2
)

// Enum value maps for FilesetEntry_SymlinkBehavior.
var (
	FilesetEntry_SymlinkBehavior_name = map[int32]string{
		1: "COPY",
		2: "DEREFERENCE",
	}
	FilesetEntry_SymlinkBehavior_value = map[string]int32{
		"COPY":        1,
		"DEREFERENCE": 2,
	}
)

func (x FilesetEntry_SymlinkBehavior) Enum() *FilesetEntry_SymlinkBehavior {
	p := new(FilesetEntry_SymlinkBehavior)
	*p = x
	return p
}

func (x FilesetEntry_SymlinkBehavior) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FilesetEntry_SymlinkBehavior) Descriptor() protoreflect.EnumDescriptor {
	return file_bazel_query_build_proto_enumTypes[0].Descriptor()
}

func (FilesetEntry_SymlinkBehavior) Type() protoreflect.EnumType {
	return &file_bazel_query_build_proto_enumTypes[0]
}

func (x FilesetEntry_SymlinkBehavior) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *FilesetEntry_SymlinkBehavior) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = FilesetEntry_SymlinkBehavior(num)
	return nil
}

// Deprecated: Use FilesetEntry_SymlinkBehavior.Descriptor instead.
func (FilesetEntry_SymlinkBehavior) EnumDescriptor() ([]byte, []int) {
	return file_bazel_query_build_proto_rawDescGZIP(), []int{6, 0}
}

type Attribute_Discriminator int32

const (
	Attribute_INTEGER                      Attribute_Discriminator = 1
	Attribute_STRING                       Attribute_Discriminator = 2
	Attribute_LABEL                        Attribute_Discriminator = 3
	Attribute_OUTPUT                       Attribute_Discriminator = 4
	Attribute_STRING_LIST                  Attribute_Discriminator = 5
	Attribute_LABEL_LIST                   Attribute_Discriminator = 6
	Attribute_OUTPUT_LIST                  Attribute_Discriminator = 7
	Attribute_DISTRIBUTION_SET             Attribute_Discriminator = 8
	Attribute_LICENSE                      Attribute_Discriminator = 9
	Attribute_STRING_DICT                  Attribute_Discriminator = 10
	Attribute_FILESET_ENTRY_LIST           Attribute_Discriminator = 11
	Attribute_LABEL_LIST_DICT              Attribute_Discriminator = 12
	Attribute_STRING_LIST_DICT             Attribute_Discriminator = 13
	Attribute_BOOLEAN                      Attribute_Discriminator = 14
	Attribute_TRISTATE                     Attribute_Discriminator = 15
	Attribute_INTEGER_LIST                 Attribute_Discriminator = 16
	Attribute_UNKNOWN                      Attribute_Discriminator = 18
	Attribute_LABEL_DICT_UNARY             Attribute_Discriminator = 19
	Attribute_SELECTOR_LIST                Attribute_Discriminator = 20
	Attribute_LABEL_KEYED_STRING_DICT      Attribute_Discriminator = 21
	Attribute_DEPRECATED_STRING_DICT_UNARY Attribute_Discriminator = 17
)

// Enum value maps for Attribute_Discriminator.
var (
	Attribute_Discriminator_name = map[int32]string{
		1:  "INTEGER",
		2:  "STRING",
		3:  "LABEL",
		4:  "OUTPUT",
		5:  "STRING_LIST",
		6:  "LABEL_LIST",
		7:  "OUTPUT_LIST",
		8:  "DISTRIBUTION_SET",
		9:  "LICENSE",
		10: "STRING_DICT",
		11: "FILESET_ENTRY_LIST",
		12: "LABEL_LIST_DICT",
		13: "STRING_LIST_DICT",
		14: "BOOLEAN",
		15: "TRISTATE",
		16: "INTEGER_LIST",
		18: "UNKNOWN",
		19: "LABEL_DICT_UNARY",
		20: "SELECTOR_LIST",
		21: "LABEL_KEYED_STRING_DICT",
		17: "DEPRECATED_STRING_DICT_UNARY",
	}
	Attribute_Discriminator_value = map[string]int32{
		"INTEGER":                      1,
		"STRING":                       2,
		"LABEL":                        3,
		"OUTPUT":                       4,
		"STRING_LIST":                  5,
		"LABEL_LIST":                   6,
		"OUTPUT_LIST":                  7,
		"DISTRIBUTION_SET":             8,
		"LICENSE":                      9,
		"STRING_DICT":                  10,
		"FILESET_ENTRY_LIST":           11,
		"LABEL_LIST_DICT":              12,
		"STRING_LIST_DICT":             13,
		"BOOLEAN":                      14,
		"TRISTATE":                     15,
		"INTEGER_LIST":                 16,
		"UNKNOWN":                      18,
		"LABEL_DICT_UNARY":             19,
		"SELECTOR_LIST":                20,
		"LABEL_KEYED_STRING_DICT":      21,
		"DEPRECATED_STRING_DICT_UNARY": 17,
	}
)

func (x Attribute_Discriminator) Enum() *Attribute_Discriminator {
	p := new(Attribute_Discriminator)
	*p = x
	return p
}

func (x Attribute_Discriminator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Attribute_Discriminator) Descriptor() protoreflect.EnumDescriptor {
	return file_bazel_query_build_proto_enumTypes[1].Descriptor()
}

func (Attribute_Discriminator) Type() protoreflect.EnumType {
	return &file_bazel_query_build_proto_enumTypes[1]
}

func (x Attribute_Discriminator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Attribute_Discriminator) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Attribute_Discriminator(num)
	return nil
}

// Deprecated: Use Attribute_Discriminator.Descriptor instead.
func (Attribute_Discriminator) EnumDescriptor() ([]byte, []int) {
	return file_bazel_query_build_proto_rawDescGZIP(), []int{7, 0}
}

type Attribute_Tristate int32

const (
	Attribute_NO   Attribute_Tristate = 0
	Attribute_YES  Attribute_Tristate = 1
	Attribute_AUTO Attribute_Tristate = 2
)

// Enum value maps for Attribute_Tristate.
var (
	Attribute_Tristate_name = map[int32]string{
		0: "NO",
		1: "YES",
		2: "AUTO",
	}
	Attribute_Tristate_value = map[string]int32{
		"NO":   0,
		"YES":  1,
		"AUTO": 2,
	}
)

func (x Attribute_Tristate) Enum() *Attribute_Tristate {
	p := new(Attribute_Tristate)
	*p = x
	return p
}

func (x Attribute_Tristate) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Attribute_Tristate) Descriptor() protoreflect.EnumDescriptor {
	return file_bazel_query_build_proto_enumTypes[2].Descriptor()
}

func (Attribute_Tristate) Type() protoreflect.EnumType {
	return &file_bazel_query_build_proto_enumTypes[2]
}

func (x Attribute_Tristate) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Attribute_Tristate) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Attribute_Tristate(num)
	return nil
}

// Deprecated: Use Attribute_Tristate.Descriptor instead.
func (Attribute_Tristate) EnumDescriptor() ([]byte, []int) {
	return file_bazel_query_build_proto_rawDescGZIP(), []int{7, 1}
}

type Target_Discriminator int32

const (
	Target_RULE              Target_Discriminator = 1
	Target_SOURCE_FILE       Target_Discriminator = 2
	Target_GENERATED_FILE    Target_Discriminator = 3
	Target_PACKAGE_GROUP     Target_Discriminator = 4
	Target_ENVIRONMENT_GROUP Target_Discriminator = 5
)

// Enum value maps for Target_Discriminator.
var (
	Target_Discriminator_name = map[int32]string{
		1: "RULE",
		2: "SOURCE_FILE",
		3: "GENERATED_FILE",
		4: "PACKAGE_GROUP",
		5: "ENVIRONMENT_GROUP",
	}
	Target_Discriminator_value = map[string]int32{
		"RULE":              1,
		"SOURCE_FILE":       2,
		"GENERATED_FILE":    3,
		"PACKAGE_GROUP":     4,
		"ENVIRONMENT_GROUP": 5,
	}
)

func (x Target_Discriminator) Enum() *Target_Discriminator {
	p := new(Target_Discriminator)
	*p = x
	return p
}

func (x Target_Discriminator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Target_Discriminator) Descriptor() protoreflect.EnumDescriptor {
	return file_bazel_query_build_proto_enumTypes[3].Descriptor()
}

func (Target_Discriminator) Type() protoreflect.EnumType {
	return &file_bazel_query_build_proto_enumTypes[3]
}

func (x Target_Discriminator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Target_Discriminator) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Target_Discriminator(num)
	return nil
}

// Deprecated: Use Target_Discriminator.Descriptor instead.
func (Target_Discriminator) EnumDescriptor() ([]byte, []int) {
	return file_bazel_query_build_proto_rawDescGZIP(), []int{15, 0}
}

type AllowedRuleClassInfo_AllowedRuleClasses int32

const (
	AllowedRuleClassInfo_ANY       AllowedRuleClassInfo_AllowedRuleClasses = 1
	AllowedRuleClassInfo_SPECIFIED AllowedRuleClassInfo_AllowedRuleClasses = 2
)

// Enum value maps for AllowedRuleClassInfo_AllowedRuleClasses.
var (
	AllowedRuleClassInfo_AllowedRuleClasses_name = map[int32]string{
		1: "ANY",
		2: "SPECIFIED",
	}
	AllowedRuleClassInfo_AllowedRuleClasses_value = map[string]int32{
		"ANY":       1,
		"SPECIFIED": 2,
	}
)

func (x AllowedRuleClassInfo_AllowedRuleClasses) Enum() *AllowedRuleClassInfo_AllowedRuleClasses {
	p := new(AllowedRuleClassInfo_AllowedRuleClasses)
	*p = x
	return p
}

func (x AllowedRuleClassInfo_AllowedRuleClasses) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AllowedRuleClassInfo_AllowedRuleClasses) Descriptor() protoreflect.EnumDescriptor {
	return file_bazel_query_build_proto_enumTypes[4].Descriptor()
}

func (AllowedRuleClassInfo_AllowedRuleClasses) Type() protoreflect.EnumType {
	return &file_bazel_query_build_proto_enumTypes[4]
}

func (x AllowedRuleClassInfo_AllowedRuleClasses) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *AllowedRuleClassInfo_AllowedRuleClasses) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = AllowedRuleClassInfo_AllowedRuleClasses(num)
	return nil
}

// Deprecated: Use AllowedRuleClassInfo_AllowedRuleClasses.Descriptor instead.
func (AllowedRuleClassInfo_AllowedRuleClasses) EnumDescriptor() ([]byte, []int) {
	return file_bazel_query_build_proto_rawDescGZIP(), []int{17, 0}
}

type License struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LicenseType   []string               `protobuf:"bytes,1,rep,name=license_type,json=licenseType" json:"license_type,omitempty"`
	Exception     []string               `protobuf:"bytes,2,rep,name=exception" json:"exception,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *License) Reset() {
	*x = License{}
	mi := &file_bazel_query_build_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *License) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*License) ProtoMessage() {}

func (x *License) ProtoReflect() protoreflect.Message {
	mi := &file_bazel_query_build_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use License.ProtoReflect.Descriptor instead.
func (*License) Descriptor() ([]byte, []int) {
	return file_bazel_query_build_proto_rawDescGZIP(), []int{0}
}

func (x *License) GetLicenseType() []string {
	if x != nil {
		return x.LicenseType
	}
	return nil
}

func (x *License) GetException() []string {
	if x != nil {
		return x.Exception
	}
	return nil
}

type StringDictEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           *string                `protobuf:"bytes,1,req,name=key" json:"key,omitempty"`
	Value         *string                `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringDictEntry) Reset() {
	*x = StringDictEntry{}
	mi := &file_bazel_query_build_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringDictEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringDictEntry) ProtoMessage() {}

func (x *StringDictEntry) ProtoReflect() protoreflect.Message {
	mi := &file_bazel_query_build_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringDictEntry.ProtoReflect.Descriptor instead.
func (*StringDictEntry) Descriptor() ([]byte, []int) {
	return file_bazel_query_build_proto_rawDescGZIP(), []int{1}
}

func (x *StringDictEntry) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (x *StringDictEntry) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type LabelDictUnaryEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           *string                `protobuf:"bytes,1,req,name=key" json:"key,omitempty"`
	Value         *string                `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LabelDictUnaryEntry) Reset() {
	*x = LabelDictUnaryEntry{}
	mi := &file_bazel_query_build_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LabelDictUnaryEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelDictUnaryEntry) ProtoMessage() {}

func (x *LabelDictUnaryEntry) ProtoReflect() protoreflect.Message {
	mi := &file_bazel_query_build_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelDictUnaryEntry.ProtoReflect.Descriptor instead.
func (*LabelDictUnaryEntry) Descriptor() ([]byte, []int) {
	return file_bazel_query_build_proto_rawDescGZIP(), []int{2}
}

func (x *LabelDictUnaryEntry) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (x *LabelDictUnaryEntry) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type LabelListDictEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           *string                `protobuf:"bytes,1,req,name=key" json:"key,omitempty"`
	Value         []string               `protobuf:"bytes,2,rep,name=value" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LabelListDictEntry) Reset() {
	*x = LabelListDictEntry{}
	mi := &file_bazel_query_build_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LabelListDictEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelListDictEntry) ProtoMessage() {}

func (x *LabelListDictEntry) ProtoReflect() protoreflect.Message {
	mi := &file_bazel_query_build_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelListDictEntry.ProtoReflect.Descriptor instead.
func (*LabelListDictEntry) Descriptor() ([]byte, []int) {
	return file_bazel_query_build_proto_rawDescGZIP(), []int{3}
}

func (x *LabelListDictEntry) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (x *LabelListDictEntry) GetValue() []string {
	if x != nil {
		return x.Value
	}
	return nil
}

type LabelKeyedStringDictEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           *string                `protobuf:"bytes,1,req,name=key" json:"key,omitempty"`
	Value         *string                `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LabelKeyedStringDictEntry) Reset() {
	*x = LabelKeyedStringDictEntry{}
	mi := &file_bazel_query_build_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LabelKeyedStringDictEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelKeyedStringDictEntry) ProtoMessage() {}

func (x *LabelKeyedStringDictEntry) ProtoReflect() protoreflect.Message {
	mi := &file_bazel_query_build_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelKeyedStringDictEntry.ProtoReflect.Descriptor instead.
func (*LabelKeyedStringDictEntry) Descriptor() ([]byte, []int) {
	return file_bazel_query_build_proto_rawDescGZIP(), []int{4}
}

func (x *LabelKeyedStringDictEntry) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (x *LabelKeyedStringDictEntry) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type StringListDictEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           *string                `protobuf:"bytes,1,req,name=key" json:"key,omitempty"`
	Value         []string               `protobuf:"bytes,2,rep,name=value" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringListDictEntry) Reset() {
	*x = StringListDictEntry{}
	mi := &file_bazel_query_build_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringListDictEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringListDictEntry) ProtoMessage() {}

func (x *StringListDictEntry) ProtoReflect() protoreflect.Message {
	mi := &file_bazel_query_build_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringListDictEntry.ProtoReflect.Descriptor instead.
func (*StringListDictEntry) Descriptor() ([]byte, []int) {
	return file_bazel_query_build_proto_rawDescGZIP(), []int{5}
}

func (x *StringListDictEntry) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (x *StringListDictEntry) GetValue() []string {
	if x != nil {
		return x.Value
	}
	return nil
}

type FilesetEntry struct {
	state                protoimpl.MessageState        `protogen:"open.v1"`
	Source               *string                       `protobuf:"bytes,1,req,name=source" json:"source,omitempty"`
	DestinationDirectory *string                       `protobuf:"bytes,2,req,name=destination_directory,json=destinationDirectory" json:"destination_directory,omitempty"`
	FilesPresent         *bool                         `protobuf:"varint,7,opt,name=files_present,json=filesPresent" json:"files_present,omitempty"`
	File                 []string                      `protobuf:"bytes,3,rep,name=file" json:"file,omitempty"`
	Exclude              []string                      `protobuf:"bytes,4,rep,name=exclude" json:"exclude,omitempty"`
	SymlinkBehavior      *FilesetEntry_SymlinkBehavior `protobuf:"varint,5,opt,name=symlink_behavior,json=symlinkBehavior,enum=blaze_query_aspect_mirror.FilesetEntry_SymlinkBehavior,def=1" json:"symlink_behavior,omitempty"`
	StripPrefix          *string                       `protobuf:"bytes,6,opt,name=strip_prefix,json=stripPrefix" json:"strip_prefix,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

// Default values for FilesetEntry fields.
const (
	Default_FilesetEntry_SymlinkBehavior = FilesetEntry_COPY
)

func (x *FilesetEntry) Reset() {
	*x = FilesetEntry{}
	mi := &file_bazel_query_build_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilesetEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilesetEntry) ProtoMessage() {}

func (x *FilesetEntry) ProtoReflect() protoreflect.Message {
	mi := &file_bazel_query_build_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilesetEntry.ProtoReflect.Descriptor instead.
func (*FilesetEntry) Descriptor() ([]byte, []int) {
	return file_bazel_query_build_proto_rawDescGZIP(), []int{6}
}

func (x *FilesetEntry) GetSource() string {
	if x != nil && x.Source != nil {
		return *x.Source
	}
	return ""
}

func (x *FilesetEntry) GetDestinationDirectory() string {
	if x != nil && x.DestinationDirectory != nil {
		return *x.DestinationDirectory
	}
	return ""
}

func (x *FilesetEntry) GetFilesPresent() bool {
	if x != nil && x.FilesPresent != nil {
		return *x.FilesPresent
	}
	return false
}

func (x *FilesetEntry) GetFile() []string {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *FilesetEntry) GetExclude() []string {
	if x != nil {
		return x.Exclude
	}
	return nil
}

func (x *FilesetEntry) GetSymlinkBehavior() FilesetEntry_SymlinkBehavior {
	if x != nil && x.SymlinkBehavior != nil {
		return *x.SymlinkBehavior
	}
	return Default_FilesetEntry_SymlinkBehavior
}

func (x *FilesetEntry) GetStripPrefix() string {
	if x != nil && x.StripPrefix != nil {
		return *x.StripPrefix
	}
	return ""
}

type Attribute struct {
	state                          protoimpl.MessageState       `protogen:"open.v1"`
	Name                           *string                      `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	ExplicitlySpecified            *bool                        `protobuf:"varint,13,opt,name=explicitly_specified,json=explicitlySpecified" json:"explicitly_specified,omitempty"`
	Nodep                          *bool                        `protobuf:"varint,20,opt,name=nodep" json:"nodep,omitempty"`
	SourceAspectName               *string                      `protobuf:"bytes,23,opt,name=source_aspect_name,json=sourceAspectName" json:"source_aspect_name,omitempty"`
	Type                           *Attribute_Discriminator     `protobuf:"varint,2,req,name=type,enum=blaze_query_aspect_mirror.Attribute_Discriminator" json:"type,omitempty"`
	IntValue                       *int32                       `protobuf:"varint,3,opt,name=int_value,json=intValue" json:"int_value,omitempty"`
	StringValue                    *string                      `protobuf:"bytes,5,opt,name=string_value,json=stringValue" json:"string_value,omitempty"`
	BooleanValue                   *bool                        `protobuf:"varint,14,opt,name=boolean_value,json=booleanValue" json:"boolean_value,omitempty"`
	TristateValue                  *Attribute_Tristate          `protobuf:"varint,15,opt,name=tristate_value,json=tristateValue,enum=blaze_query_aspect_mirror.Attribute_Tristate" json:"tristate_value,omitempty"`
	StringListValue                []string                     `protobuf:"bytes,6,rep,name=string_list_value,json=stringListValue" json:"string_list_value,omitempty"`
	License                        *License                     `protobuf:"bytes,7,opt,name=license" json:"license,omitempty"`
	StringDictValue                []*StringDictEntry           `protobuf:"bytes,8,rep,name=string_dict_value,json=stringDictValue" json:"string_dict_value,omitempty"`
	FilesetListValue               []*FilesetEntry              `protobuf:"bytes,9,rep,name=fileset_list_value,json=filesetListValue" json:"fileset_list_value,omitempty"`
	LabelListDictValue             []*LabelListDictEntry        `protobuf:"bytes,10,rep,name=label_list_dict_value,json=labelListDictValue" json:"label_list_dict_value,omitempty"`
	StringListDictValue            []*StringListDictEntry       `protobuf:"bytes,11,rep,name=string_list_dict_value,json=stringListDictValue" json:"string_list_dict_value,omitempty"`
	IntListValue                   []int32                      `protobuf:"varint,17,rep,name=int_list_value,json=intListValue" json:"int_list_value,omitempty"`
	LabelDictUnaryValue            []*LabelDictUnaryEntry       `protobuf:"bytes,19,rep,name=label_dict_unary_value,json=labelDictUnaryValue" json:"label_dict_unary_value,omitempty"`
	LabelKeyedStringDictValue      []*LabelKeyedStringDictEntry `protobuf:"bytes,22,rep,name=label_keyed_string_dict_value,json=labelKeyedStringDictValue" json:"label_keyed_string_dict_value,omitempty"`
	SelectorList                   *Attribute_SelectorList      `protobuf:"bytes,21,opt,name=selector_list,json=selectorList" json:"selector_list,omitempty"`
	DEPRECATEDStringDictUnaryValue [][]byte                     `protobuf:"bytes,18,rep,name=DEPRECATED_string_dict_unary_value,json=DEPRECATEDStringDictUnaryValue" json:"DEPRECATED_string_dict_unary_value,omitempty"`
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *Attribute) Reset() {
	*x = Attribute{}
	mi := &file_bazel_query_build_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Attribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attribute) ProtoMessage() {}

func (x *Attribute) ProtoReflect() protoreflect.Message {
	mi := &file_bazel_query_build_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attribute.ProtoReflect.Descriptor instead.
func (*Attribute) Descriptor() ([]byte, []int) {
	return file_bazel_query_build_proto_rawDescGZIP(), []int{7}
}

func (x *Attribute) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Attribute) GetExplicitlySpecified() bool {
	if x != nil && x.ExplicitlySpecified != nil {
		return *x.ExplicitlySpecified
	}
	return false
}

func (x *Attribute) GetNodep() bool {
	if x != nil && x.Nodep != nil {
		return *x.Nodep
	}
	return false
}

func (x *Attribute) GetSourceAspectName() string {
	if x != nil && x.SourceAspectName != nil {
		return *x.SourceAspectName
	}
	return ""
}

func (x *Attribute) GetType() Attribute_Discriminator {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Attribute_INTEGER
}

func (x *Attribute) GetIntValue() int32 {
	if x != nil && x.IntValue != nil {
		return *x.IntValue
	}
	return 0
}

func (x *Attribute) GetStringValue() string {
	if x != nil && x.StringValue != nil {
		return *x.StringValue
	}
	return ""
}

func (x *Attribute) GetBooleanValue() bool {
	if x != nil && x.BooleanValue != nil {
		return *x.BooleanValue
	}
	return false
}

func (x *Attribute) GetTristateValue() Attribute_Tristate {
	if x != nil && x.TristateValue != nil {
		return *x.TristateValue
	}
	return Attribute_NO
}

func (x *Attribute) GetStringListValue() []string {
	if x != nil {
		return x.StringListValue
	}
	return nil
}

func (x *Attribute) GetLicense() *License {
	if x != nil {
		return x.License
	}
	return nil
}

func (x *Attribute) GetStringDictValue() []*StringDictEntry {
	if x != nil {
		return x.StringDictValue
	}
	return nil
}

func (x *Attribute) GetFilesetListValue() []*FilesetEntry {
	if x != nil {
		return x.FilesetListValue
	}
	return nil
}

func (x *Attribute) GetLabelListDictValue() []*LabelListDictEntry {
	if x != nil {
		return x.LabelListDictValue
	}
	return nil
}

func (x *Attribute) GetStringListDictValue() []*StringListDictEntry {
	if x != nil {
		return x.StringListDictValue
	}
	return nil
}

func (x *Attribute) GetIntListValue() []int32 {
	if x != nil {
		return x.IntListValue
	}
	return nil
}

func (x *Attribute) GetLabelDictUnaryValue() []*LabelDictUnaryEntry {
	if x != nil {
		return x.LabelDictUnaryValue
	}
	return nil
}

func (x *Attribute) GetLabelKeyedStringDictValue() []*LabelKeyedStringDictEntry {
	if x != nil {
		return x.LabelKeyedStringDictValue
	}
	return nil
}

func (x *Attribute) GetSelectorList() *Attribute_SelectorList {
	if x != nil {
		return x.SelectorList
	}
	return nil
}

func (x *Attribute) GetDEPRECATEDStringDictUnaryValue() [][]byte {
	if x != nil {
		return x.DEPRECATEDStringDictUnaryValue
	}
	return nil
}

type Rule struct {
	state                      protoimpl.MessageState `protogen:"open.v1"`
	Name                       *string                `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	RuleClass                  *string                `protobuf:"bytes,2,req,name=rule_class,json=ruleClass" json:"rule_class,omitempty"`
	Location                   *string                `protobuf:"bytes,3,opt,name=location" json:"location,omitempty"`
	Attribute                  []*Attribute           `protobuf:"bytes,4,rep,name=attribute" json:"attribute,omitempty"`
	RuleInput                  []string               `protobuf:"bytes,5,rep,name=rule_input,json=ruleInput" json:"rule_input,omitempty"`
	ConfiguredRuleInput        []*ConfiguredRuleInput `protobuf:"bytes,15,rep,name=configured_rule_input,json=configuredRuleInput" json:"configured_rule_input,omitempty"`
	RuleOutput                 []string               `protobuf:"bytes,6,rep,name=rule_output,json=ruleOutput" json:"rule_output,omitempty"`
	DefaultSetting             []string               `protobuf:"bytes,7,rep,name=default_setting,json=defaultSetting" json:"default_setting,omitempty"`
	DEPRECATEDPublicByDefault  *bool                  `protobuf:"varint,9,opt,name=DEPRECATED_public_by_default,json=DEPRECATEDPublicByDefault" json:"DEPRECATED_public_by_default,omitempty"`
	DEPRECATEDIsSkylark        *bool                  `protobuf:"varint,10,opt,name=DEPRECATED_is_skylark,json=DEPRECATEDIsSkylark" json:"DEPRECATED_is_skylark,omitempty"`
	SkylarkEnvironmentHashCode *string                `protobuf:"bytes,12,opt,name=skylark_environment_hash_code,json=skylarkEnvironmentHashCode" json:"skylark_environment_hash_code,omitempty"`
	InstantiationStack         []string               `protobuf:"bytes,13,rep,name=instantiation_stack,json=instantiationStack" json:"instantiation_stack,omitempty"`
	DefinitionStack            []string               `protobuf:"bytes,14,rep,name=definition_stack,json=definitionStack" json:"definition_stack,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *Rule) Reset() {
	*x = Rule{}
	mi := &file_bazel_query_build_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Rule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rule) ProtoMessage() {}

func (x *Rule) ProtoReflect() protoreflect.Message {
	mi := &file_bazel_query_build_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rule.ProtoReflect.Descriptor instead.
func (*Rule) Descriptor() ([]byte, []int) {
	return file_bazel_query_build_proto_rawDescGZIP(), []int{8}
}

func (x *Rule) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Rule) GetRuleClass() string {
	if x != nil && x.RuleClass != nil {
		return *x.RuleClass
	}
	return ""
}

func (x *Rule) GetLocation() string {
	if x != nil && x.Location != nil {
		return *x.Location
	}
	return ""
}

func (x *Rule) GetAttribute() []*Attribute {
	if x != nil {
		return x.Attribute
	}
	return nil
}

func (x *Rule) GetRuleInput() []string {
	if x != nil {
		return x.RuleInput
	}
	return nil
}

func (x *Rule) GetConfiguredRuleInput() []*ConfiguredRuleInput {
	if x != nil {
		return x.ConfiguredRuleInput
	}
	return nil
}

func (x *Rule) GetRuleOutput() []string {
	if x != nil {
		return x.RuleOutput
	}
	return nil
}

func (x *Rule) GetDefaultSetting() []string {
	if x != nil {
		return x.DefaultSetting
	}
	return nil
}

func (x *Rule) GetDEPRECATEDPublicByDefault() bool {
	if x != nil && x.DEPRECATEDPublicByDefault != nil {
		return *x.DEPRECATEDPublicByDefault
	}
	return false
}

func (x *Rule) GetDEPRECATEDIsSkylark() bool {
	if x != nil && x.DEPRECATEDIsSkylark != nil {
		return *x.DEPRECATEDIsSkylark
	}
	return false
}

func (x *Rule) GetSkylarkEnvironmentHashCode() string {
	if x != nil && x.SkylarkEnvironmentHashCode != nil {
		return *x.SkylarkEnvironmentHashCode
	}
	return ""
}

func (x *Rule) GetInstantiationStack() []string {
	if x != nil {
		return x.InstantiationStack
	}
	return nil
}

func (x *Rule) GetDefinitionStack() []string {
	if x != nil {
		return x.DefinitionStack
	}
	return nil
}

type ConfiguredRuleInput struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	Label                 *string                `protobuf:"bytes,1,opt,name=label" json:"label,omitempty"`
	ConfigurationChecksum *string                `protobuf:"bytes,2,opt,name=configuration_checksum,json=configurationChecksum" json:"configuration_checksum,omitempty"`
	ConfigurationId       *uint32                `protobuf:"varint,3,opt,name=configuration_id,json=configurationId" json:"configuration_id,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *ConfiguredRuleInput) Reset() {
	*x = ConfiguredRuleInput{}
	mi := &file_bazel_query_build_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfiguredRuleInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfiguredRuleInput) ProtoMessage() {}

func (x *ConfiguredRuleInput) ProtoReflect() protoreflect.Message {
	mi := &file_bazel_query_build_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfiguredRuleInput.ProtoReflect.Descriptor instead.
func (*ConfiguredRuleInput) Descriptor() ([]byte, []int) {
	return file_bazel_query_build_proto_rawDescGZIP(), []int{9}
}

func (x *ConfiguredRuleInput) GetLabel() string {
	if x != nil && x.Label != nil {
		return *x.Label
	}
	return ""
}

func (x *ConfiguredRuleInput) GetConfigurationChecksum() string {
	if x != nil && x.ConfigurationChecksum != nil {
		return *x.ConfigurationChecksum
	}
	return ""
}

func (x *ConfiguredRuleInput) GetConfigurationId() uint32 {
	if x != nil && x.ConfigurationId != nil {
		return *x.ConfigurationId
	}
	return 0
}

type RuleSummary struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rule          *Rule                  `protobuf:"bytes,1,req,name=rule" json:"rule,omitempty"`
	Dependency    []*Rule                `protobuf:"bytes,2,rep,name=dependency" json:"dependency,omitempty"`
	Location      *string                `protobuf:"bytes,3,opt,name=location" json:"location,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RuleSummary) Reset() {
	*x = RuleSummary{}
	mi := &file_bazel_query_build_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuleSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleSummary) ProtoMessage() {}

func (x *RuleSummary) ProtoReflect() protoreflect.Message {
	mi := &file_bazel_query_build_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleSummary.ProtoReflect.Descriptor instead.
func (*RuleSummary) Descriptor() ([]byte, []int) {
	return file_bazel_query_build_proto_rawDescGZIP(), []int{10}
}

func (x *RuleSummary) GetRule() *Rule {
	if x != nil {
		return x.Rule
	}
	return nil
}

func (x *RuleSummary) GetDependency() []*Rule {
	if x != nil {
		return x.Dependency
	}
	return nil
}

func (x *RuleSummary) GetLocation() string {
	if x != nil && x.Location != nil {
		return *x.Location
	}
	return ""
}

type PackageGroup struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Name                 *string                `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	ContainedPackage     []string               `protobuf:"bytes,2,rep,name=contained_package,json=containedPackage" json:"contained_package,omitempty"`
	IncludedPackageGroup []string               `protobuf:"bytes,3,rep,name=included_package_group,json=includedPackageGroup" json:"included_package_group,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *PackageGroup) Reset() {
	*x = PackageGroup{}
	mi := &file_bazel_query_build_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PackageGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackageGroup) ProtoMessage() {}

func (x *PackageGroup) ProtoReflect() protoreflect.Message {
	mi := &file_bazel_query_build_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackageGroup.ProtoReflect.Descriptor instead.
func (*PackageGroup) Descriptor() ([]byte, []int) {
	return file_bazel_query_build_proto_rawDescGZIP(), []int{11}
}

func (x *PackageGroup) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *PackageGroup) GetContainedPackage() []string {
	if x != nil {
		return x.ContainedPackage
	}
	return nil
}

func (x *PackageGroup) GetIncludedPackageGroup() []string {
	if x != nil {
		return x.IncludedPackageGroup
	}
	return nil
}

type EnvironmentGroup struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          *string                `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Environment   []string               `protobuf:"bytes,2,rep,name=environment" json:"environment,omitempty"`
	Default       []string               `protobuf:"bytes,3,rep,name=default" json:"default,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnvironmentGroup) Reset() {
	*x = EnvironmentGroup{}
	mi := &file_bazel_query_build_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnvironmentGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvironmentGroup) ProtoMessage() {}

func (x *EnvironmentGroup) ProtoReflect() protoreflect.Message {
	mi := &file_bazel_query_build_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvironmentGroup.ProtoReflect.Descriptor instead.
func (*EnvironmentGroup) Descriptor() ([]byte, []int) {
	return file_bazel_query_build_proto_rawDescGZIP(), []int{12}
}

func (x *EnvironmentGroup) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *EnvironmentGroup) GetEnvironment() []string {
	if x != nil {
		return x.Environment
	}
	return nil
}

func (x *EnvironmentGroup) GetDefault() []string {
	if x != nil {
		return x.Default
	}
	return nil
}

type SourceFile struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	Name                  *string                `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Location              *string                `protobuf:"bytes,2,opt,name=location" json:"location,omitempty"`
	Subinclude            []string               `protobuf:"bytes,3,rep,name=subinclude" json:"subinclude,omitempty"`
	PackageGroup          []string               `protobuf:"bytes,4,rep,name=package_group,json=packageGroup" json:"package_group,omitempty"`
	VisibilityLabel       []string               `protobuf:"bytes,5,rep,name=visibility_label,json=visibilityLabel" json:"visibility_label,omitempty"`
	Feature               []string               `protobuf:"bytes,6,rep,name=feature" json:"feature,omitempty"`
	License               *License               `protobuf:"bytes,8,opt,name=license" json:"license,omitempty"`
	PackageContainsErrors *bool                  `protobuf:"varint,9,opt,name=package_contains_errors,json=packageContainsErrors" json:"package_contains_errors,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *SourceFile) Reset() {
	*x = SourceFile{}
	mi := &file_bazel_query_build_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SourceFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceFile) ProtoMessage() {}

func (x *SourceFile) ProtoReflect() protoreflect.Message {
	mi := &file_bazel_query_build_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceFile.ProtoReflect.Descriptor instead.
func (*SourceFile) Descriptor() ([]byte, []int) {
	return file_bazel_query_build_proto_rawDescGZIP(), []int{13}
}

func (x *SourceFile) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *SourceFile) GetLocation() string {
	if x != nil && x.Location != nil {
		return *x.Location
	}
	return ""
}

func (x *SourceFile) GetSubinclude() []string {
	if x != nil {
		return x.Subinclude
	}
	return nil
}

func (x *SourceFile) GetPackageGroup() []string {
	if x != nil {
		return x.PackageGroup
	}
	return nil
}

func (x *SourceFile) GetVisibilityLabel() []string {
	if x != nil {
		return x.VisibilityLabel
	}
	return nil
}

func (x *SourceFile) GetFeature() []string {
	if x != nil {
		return x.Feature
	}
	return nil
}

func (x *SourceFile) GetLicense() *License {
	if x != nil {
		return x.License
	}
	return nil
}

func (x *SourceFile) GetPackageContainsErrors() bool {
	if x != nil && x.PackageContainsErrors != nil {
		return *x.PackageContainsErrors
	}
	return false
}

type GeneratedFile struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Name           *string                `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	GeneratingRule *string                `protobuf:"bytes,2,req,name=generating_rule,json=generatingRule" json:"generating_rule,omitempty"`
	Location       *string                `protobuf:"bytes,3,opt,name=location" json:"location,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GeneratedFile) Reset() {
	*x = GeneratedFile{}
	mi := &file_bazel_query_build_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GeneratedFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneratedFile) ProtoMessage() {}

func (x *GeneratedFile) ProtoReflect() protoreflect.Message {
	mi := &file_bazel_query_build_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneratedFile.ProtoReflect.Descriptor instead.
func (*GeneratedFile) Descriptor() ([]byte, []int) {
	return file_bazel_query_build_proto_rawDescGZIP(), []int{14}
}

func (x *GeneratedFile) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GeneratedFile) GetGeneratingRule() string {
	if x != nil && x.GeneratingRule != nil {
		return *x.GeneratingRule
	}
	return ""
}

func (x *GeneratedFile) GetLocation() string {
	if x != nil && x.Location != nil {
		return *x.Location
	}
	return ""
}

type Target struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Type             *Target_Discriminator  `protobuf:"varint,1,req,name=type,enum=blaze_query_aspect_mirror.Target_Discriminator" json:"type,omitempty"`
	Rule             *Rule                  `protobuf:"bytes,2,opt,name=rule" json:"rule,omitempty"`
	SourceFile       *SourceFile            `protobuf:"bytes,3,opt,name=source_file,json=sourceFile" json:"source_file,omitempty"`
	GeneratedFile    *GeneratedFile         `protobuf:"bytes,4,opt,name=generated_file,json=generatedFile" json:"generated_file,omitempty"`
	PackageGroup     *PackageGroup          `protobuf:"bytes,5,opt,name=package_group,json=packageGroup" json:"package_group,omitempty"`
	EnvironmentGroup *EnvironmentGroup      `protobuf:"bytes,6,opt,name=environment_group,json=environmentGroup" json:"environment_group,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Target) Reset() {
	*x = Target{}
	mi := &file_bazel_query_build_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Target) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target) ProtoMessage() {}

func (x *Target) ProtoReflect() protoreflect.Message {
	mi := &file_bazel_query_build_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target.ProtoReflect.Descriptor instead.
func (*Target) Descriptor() ([]byte, []int) {
	return file_bazel_query_build_proto_rawDescGZIP(), []int{15}
}

func (x *Target) GetType() Target_Discriminator {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Target_RULE
}

func (x *Target) GetRule() *Rule {
	if x != nil {
		return x.Rule
	}
	return nil
}

func (x *Target) GetSourceFile() *SourceFile {
	if x != nil {
		return x.SourceFile
	}
	return nil
}

func (x *Target) GetGeneratedFile() *GeneratedFile {
	if x != nil {
		return x.GeneratedFile
	}
	return nil
}

func (x *Target) GetPackageGroup() *PackageGroup {
	if x != nil {
		return x.PackageGroup
	}
	return nil
}

func (x *Target) GetEnvironmentGroup() *EnvironmentGroup {
	if x != nil {
		return x.EnvironmentGroup
	}
	return nil
}

type QueryResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Target        []*Target              `protobuf:"bytes,1,rep,name=target" json:"target,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryResult) Reset() {
	*x = QueryResult{}
	mi := &file_bazel_query_build_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryResult) ProtoMessage() {}

func (x *QueryResult) ProtoReflect() protoreflect.Message {
	mi := &file_bazel_query_build_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryResult.ProtoReflect.Descriptor instead.
func (*QueryResult) Descriptor() ([]byte, []int) {
	return file_bazel_query_build_proto_rawDescGZIP(), []int{16}
}

func (x *QueryResult) GetTarget() []*Target {
	if x != nil {
		return x.Target
	}
	return nil
}

type AllowedRuleClassInfo struct {
	state            protoimpl.MessageState                   `protogen:"open.v1"`
	Policy           *AllowedRuleClassInfo_AllowedRuleClasses `protobuf:"varint,1,req,name=policy,enum=blaze_query_aspect_mirror.AllowedRuleClassInfo_AllowedRuleClasses" json:"policy,omitempty"`
	AllowedRuleClass []string                                 `protobuf:"bytes,2,rep,name=allowed_rule_class,json=allowedRuleClass" json:"allowed_rule_class,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *AllowedRuleClassInfo) Reset() {
	*x = AllowedRuleClassInfo{}
	mi := &file_bazel_query_build_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AllowedRuleClassInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllowedRuleClassInfo) ProtoMessage() {}

func (x *AllowedRuleClassInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bazel_query_build_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllowedRuleClassInfo.ProtoReflect.Descriptor instead.
func (*AllowedRuleClassInfo) Descriptor() ([]byte, []int) {
	return file_bazel_query_build_proto_rawDescGZIP(), []int{17}
}

func (x *AllowedRuleClassInfo) GetPolicy() AllowedRuleClassInfo_AllowedRuleClasses {
	if x != nil && x.Policy != nil {
		return *x.Policy
	}
	return AllowedRuleClassInfo_ANY
}

func (x *AllowedRuleClassInfo) GetAllowedRuleClass() []string {
	if x != nil {
		return x.AllowedRuleClass
	}
	return nil
}

type AttributeDefinition struct {
	state              protoimpl.MessageState   `protogen:"open.v1"`
	Name               *string                  `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Type               *Attribute_Discriminator `protobuf:"varint,2,req,name=type,enum=blaze_query_aspect_mirror.Attribute_Discriminator" json:"type,omitempty"`
	Mandatory          *bool                    `protobuf:"varint,3,opt,name=mandatory" json:"mandatory,omitempty"`
	AllowedRuleClasses *AllowedRuleClassInfo    `protobuf:"bytes,4,opt,name=allowed_rule_classes,json=allowedRuleClasses" json:"allowed_rule_classes,omitempty"`
	Documentation      *string                  `protobuf:"bytes,5,opt,name=documentation" json:"documentation,omitempty"`
	AllowEmpty         *bool                    `protobuf:"varint,6,opt,name=allow_empty,json=allowEmpty" json:"allow_empty,omitempty"`
	AllowSingleFile    *bool                    `protobuf:"varint,7,opt,name=allow_single_file,json=allowSingleFile" json:"allow_single_file,omitempty"`
	Default            *AttributeValue          `protobuf:"bytes,9,opt,name=default" json:"default,omitempty"`
	Executable         *bool                    `protobuf:"varint,10,opt,name=executable" json:"executable,omitempty"`
	Configurable       *bool                    `protobuf:"varint,11,opt,name=configurable" json:"configurable,omitempty"`
	Nodep              *bool                    `protobuf:"varint,12,opt,name=nodep" json:"nodep,omitempty"`
	CfgIsHost          *bool                    `protobuf:"varint,13,opt,name=cfg_is_host,json=cfgIsHost" json:"cfg_is_host,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *AttributeDefinition) Reset() {
	*x = AttributeDefinition{}
	mi := &file_bazel_query_build_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttributeDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttributeDefinition) ProtoMessage() {}

func (x *AttributeDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_bazel_query_build_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttributeDefinition.ProtoReflect.Descriptor instead.
func (*AttributeDefinition) Descriptor() ([]byte, []int) {
	return file_bazel_query_build_proto_rawDescGZIP(), []int{18}
}

func (x *AttributeDefinition) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *AttributeDefinition) GetType() Attribute_Discriminator {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Attribute_INTEGER
}

func (x *AttributeDefinition) GetMandatory() bool {
	if x != nil && x.Mandatory != nil {
		return *x.Mandatory
	}
	return false
}

func (x *AttributeDefinition) GetAllowedRuleClasses() *AllowedRuleClassInfo {
	if x != nil {
		return x.AllowedRuleClasses
	}
	return nil
}

func (x *AttributeDefinition) GetDocumentation() string {
	if x != nil && x.Documentation != nil {
		return *x.Documentation
	}
	return ""
}

func (x *AttributeDefinition) GetAllowEmpty() bool {
	if x != nil && x.AllowEmpty != nil {
		return *x.AllowEmpty
	}
	return false
}

func (x *AttributeDefinition) GetAllowSingleFile() bool {
	if x != nil && x.AllowSingleFile != nil {
		return *x.AllowSingleFile
	}
	return false
}

func (x *AttributeDefinition) GetDefault() *AttributeValue {
	if x != nil {
		return x.Default
	}
	return nil
}

func (x *AttributeDefinition) GetExecutable() bool {
	if x != nil && x.Executable != nil {
		return *x.Executable
	}
	return false
}

func (x *AttributeDefinition) GetConfigurable() bool {
	if x != nil && x.Configurable != nil {
		return *x.Configurable
	}
	return false
}

func (x *AttributeDefinition) GetNodep() bool {
	if x != nil && x.Nodep != nil {
		return *x.Nodep
	}
	return false
}

func (x *AttributeDefinition) GetCfgIsHost() bool {
	if x != nil && x.CfgIsHost != nil {
		return *x.CfgIsHost
	}
	return false
}

type AttributeValue struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Int           *int32                      `protobuf:"varint,1,opt,name=int" json:"int,omitempty"`
	String_       *string                     `protobuf:"bytes,2,opt,name=string" json:"string,omitempty"`
	Bool          *bool                       `protobuf:"varint,3,opt,name=bool" json:"bool,omitempty"`
	List          []*AttributeValue           `protobuf:"bytes,4,rep,name=list" json:"list,omitempty"`
	Dict          []*AttributeValue_DictEntry `protobuf:"bytes,5,rep,name=dict" json:"dict,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AttributeValue) Reset() {
	*x = AttributeValue{}
	mi := &file_bazel_query_build_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttributeValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttributeValue) ProtoMessage() {}

func (x *AttributeValue) ProtoReflect() protoreflect.Message {
	mi := &file_bazel_query_build_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttributeValue.ProtoReflect.Descriptor instead.
func (*AttributeValue) Descriptor() ([]byte, []int) {
	return file_bazel_query_build_proto_rawDescGZIP(), []int{19}
}

func (x *AttributeValue) GetInt() int32 {
	if x != nil && x.Int != nil {
		return *x.Int
	}
	return 0
}

func (x *AttributeValue) GetString_() string {
	if x != nil && x.String_ != nil {
		return *x.String_
	}
	return ""
}

func (x *AttributeValue) GetBool() bool {
	if x != nil && x.Bool != nil {
		return *x.Bool
	}
	return false
}

func (x *AttributeValue) GetList() []*AttributeValue {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *AttributeValue) GetDict() []*AttributeValue_DictEntry {
	if x != nil {
		return x.Dict
	}
	return nil
}

type RuleDefinition struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          *string                `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Attribute     []*AttributeDefinition `protobuf:"bytes,2,rep,name=attribute" json:"attribute,omitempty"`
	Documentation *string                `protobuf:"bytes,3,opt,name=documentation" json:"documentation,omitempty"`
	Label         *string                `protobuf:"bytes,4,opt,name=label" json:"label,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RuleDefinition) Reset() {
	*x = RuleDefinition{}
	mi := &file_bazel_query_build_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuleDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleDefinition) ProtoMessage() {}

func (x *RuleDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_bazel_query_build_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleDefinition.ProtoReflect.Descriptor instead.
func (*RuleDefinition) Descriptor() ([]byte, []int) {
	return file_bazel_query_build_proto_rawDescGZIP(), []int{20}
}

func (x *RuleDefinition) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *RuleDefinition) GetAttribute() []*AttributeDefinition {
	if x != nil {
		return x.Attribute
	}
	return nil
}

func (x *RuleDefinition) GetDocumentation() string {
	if x != nil && x.Documentation != nil {
		return *x.Documentation
	}
	return ""
}

func (x *RuleDefinition) GetLabel() string {
	if x != nil && x.Label != nil {
		return *x.Label
	}
	return ""
}

type BuildLanguage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rule          []*RuleDefinition      `protobuf:"bytes,1,rep,name=rule" json:"rule,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BuildLanguage) Reset() {
	*x = BuildLanguage{}
	mi := &file_bazel_query_build_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuildLanguage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildLanguage) ProtoMessage() {}

func (x *BuildLanguage) ProtoReflect() protoreflect.Message {
	mi := &file_bazel_query_build_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildLanguage.ProtoReflect.Descriptor instead.
func (*BuildLanguage) Descriptor() ([]byte, []int) {
	return file_bazel_query_build_proto_rawDescGZIP(), []int{21}
}

func (x *BuildLanguage) GetRule() []*RuleDefinition {
	if x != nil {
		return x.Rule
	}
	return nil
}

type Attribute_SelectorEntry struct {
	state                          protoimpl.MessageState       `protogen:"open.v1"`
	Label                          *string                      `protobuf:"bytes,1,opt,name=label" json:"label,omitempty"`
	IsDefaultValue                 *bool                        `protobuf:"varint,16,opt,name=is_default_value,json=isDefaultValue" json:"is_default_value,omitempty"`
	IntValue                       *int32                       `protobuf:"varint,2,opt,name=int_value,json=intValue" json:"int_value,omitempty"`
	StringValue                    *string                      `protobuf:"bytes,3,opt,name=string_value,json=stringValue" json:"string_value,omitempty"`
	BooleanValue                   *bool                        `protobuf:"varint,4,opt,name=boolean_value,json=booleanValue" json:"boolean_value,omitempty"`
	TristateValue                  *Attribute_Tristate          `protobuf:"varint,5,opt,name=tristate_value,json=tristateValue,enum=blaze_query_aspect_mirror.Attribute_Tristate" json:"tristate_value,omitempty"`
	StringListValue                []string                     `protobuf:"bytes,6,rep,name=string_list_value,json=stringListValue" json:"string_list_value,omitempty"`
	License                        *License                     `protobuf:"bytes,7,opt,name=license" json:"license,omitempty"`
	StringDictValue                []*StringDictEntry           `protobuf:"bytes,8,rep,name=string_dict_value,json=stringDictValue" json:"string_dict_value,omitempty"`
	FilesetListValue               []*FilesetEntry              `protobuf:"bytes,9,rep,name=fileset_list_value,json=filesetListValue" json:"fileset_list_value,omitempty"`
	LabelListDictValue             []*LabelListDictEntry        `protobuf:"bytes,10,rep,name=label_list_dict_value,json=labelListDictValue" json:"label_list_dict_value,omitempty"`
	StringListDictValue            []*StringListDictEntry       `protobuf:"bytes,11,rep,name=string_list_dict_value,json=stringListDictValue" json:"string_list_dict_value,omitempty"`
	IntListValue                   []int32                      `protobuf:"varint,13,rep,name=int_list_value,json=intListValue" json:"int_list_value,omitempty"`
	LabelDictUnaryValue            []*LabelDictUnaryEntry       `protobuf:"bytes,15,rep,name=label_dict_unary_value,json=labelDictUnaryValue" json:"label_dict_unary_value,omitempty"`
	LabelKeyedStringDictValue      []*LabelKeyedStringDictEntry `protobuf:"bytes,17,rep,name=label_keyed_string_dict_value,json=labelKeyedStringDictValue" json:"label_keyed_string_dict_value,omitempty"`
	DEPRECATEDStringDictUnaryValue [][]byte                     `protobuf:"bytes,14,rep,name=DEPRECATED_string_dict_unary_value,json=DEPRECATEDStringDictUnaryValue" json:"DEPRECATED_string_dict_unary_value,omitempty"`
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *Attribute_SelectorEntry) Reset() {
	*x = Attribute_SelectorEntry{}
	mi := &file_bazel_query_build_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Attribute_SelectorEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attribute_SelectorEntry) ProtoMessage() {}

func (x *Attribute_SelectorEntry) ProtoReflect() protoreflect.Message {
	mi := &file_bazel_query_build_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attribute_SelectorEntry.ProtoReflect.Descriptor instead.
func (*Attribute_SelectorEntry) Descriptor() ([]byte, []int) {
	return file_bazel_query_build_proto_rawDescGZIP(), []int{7, 0}
}

func (x *Attribute_SelectorEntry) GetLabel() string {
	if x != nil && x.Label != nil {
		return *x.Label
	}
	return ""
}

func (x *Attribute_SelectorEntry) GetIsDefaultValue() bool {
	if x != nil && x.IsDefaultValue != nil {
		return *x.IsDefaultValue
	}
	return false
}

func (x *Attribute_SelectorEntry) GetIntValue() int32 {
	if x != nil && x.IntValue != nil {
		return *x.IntValue
	}
	return 0
}

func (x *Attribute_SelectorEntry) GetStringValue() string {
	if x != nil && x.StringValue != nil {
		return *x.StringValue
	}
	return ""
}

func (x *Attribute_SelectorEntry) GetBooleanValue() bool {
	if x != nil && x.BooleanValue != nil {
		return *x.BooleanValue
	}
	return false
}

func (x *Attribute_SelectorEntry) GetTristateValue() Attribute_Tristate {
	if x != nil && x.TristateValue != nil {
		return *x.TristateValue
	}
	return Attribute_NO
}

func (x *Attribute_SelectorEntry) GetStringListValue() []string {
	if x != nil {
		return x.StringListValue
	}
	return nil
}

func (x *Attribute_SelectorEntry) GetLicense() *License {
	if x != nil {
		return x.License
	}
	return nil
}

func (x *Attribute_SelectorEntry) GetStringDictValue() []*StringDictEntry {
	if x != nil {
		return x.StringDictValue
	}
	return nil
}

func (x *Attribute_SelectorEntry) GetFilesetListValue() []*FilesetEntry {
	if x != nil {
		return x.FilesetListValue
	}
	return nil
}

func (x *Attribute_SelectorEntry) GetLabelListDictValue() []*LabelListDictEntry {
	if x != nil {
		return x.LabelListDictValue
	}
	return nil
}

func (x *Attribute_SelectorEntry) GetStringListDictValue() []*StringListDictEntry {
	if x != nil {
		return x.StringListDictValue
	}
	return nil
}

func (x *Attribute_SelectorEntry) GetIntListValue() []int32 {
	if x != nil {
		return x.IntListValue
	}
	return nil
}

func (x *Attribute_SelectorEntry) GetLabelDictUnaryValue() []*LabelDictUnaryEntry {
	if x != nil {
		return x.LabelDictUnaryValue
	}
	return nil
}

func (x *Attribute_SelectorEntry) GetLabelKeyedStringDictValue() []*LabelKeyedStringDictEntry {
	if x != nil {
		return x.LabelKeyedStringDictValue
	}
	return nil
}

func (x *Attribute_SelectorEntry) GetDEPRECATEDStringDictUnaryValue() [][]byte {
	if x != nil {
		return x.DEPRECATEDStringDictUnaryValue
	}
	return nil
}

type Attribute_Selector struct {
	state           protoimpl.MessageState     `protogen:"open.v1"`
	Entries         []*Attribute_SelectorEntry `protobuf:"bytes,1,rep,name=entries" json:"entries,omitempty"`
	HasDefaultValue *bool                      `protobuf:"varint,2,opt,name=has_default_value,json=hasDefaultValue" json:"has_default_value,omitempty"`
	NoMatchError    *string                    `protobuf:"bytes,3,opt,name=no_match_error,json=noMatchError" json:"no_match_error,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Attribute_Selector) Reset() {
	*x = Attribute_Selector{}
	mi := &file_bazel_query_build_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Attribute_Selector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attribute_Selector) ProtoMessage() {}

func (x *Attribute_Selector) ProtoReflect() protoreflect.Message {
	mi := &file_bazel_query_build_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attribute_Selector.ProtoReflect.Descriptor instead.
func (*Attribute_Selector) Descriptor() ([]byte, []int) {
	return file_bazel_query_build_proto_rawDescGZIP(), []int{7, 1}
}

func (x *Attribute_Selector) GetEntries() []*Attribute_SelectorEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *Attribute_Selector) GetHasDefaultValue() bool {
	if x != nil && x.HasDefaultValue != nil {
		return *x.HasDefaultValue
	}
	return false
}

func (x *Attribute_Selector) GetNoMatchError() string {
	if x != nil && x.NoMatchError != nil {
		return *x.NoMatchError
	}
	return ""
}

type Attribute_SelectorList struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Type          *Attribute_Discriminator `protobuf:"varint,1,opt,name=type,enum=blaze_query_aspect_mirror.Attribute_Discriminator" json:"type,omitempty"`
	Elements      []*Attribute_Selector    `protobuf:"bytes,2,rep,name=elements" json:"elements,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Attribute_SelectorList) Reset() {
	*x = Attribute_SelectorList{}
	mi := &file_bazel_query_build_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Attribute_SelectorList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attribute_SelectorList) ProtoMessage() {}

func (x *Attribute_SelectorList) ProtoReflect() protoreflect.Message {
	mi := &file_bazel_query_build_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attribute_SelectorList.ProtoReflect.Descriptor instead.
func (*Attribute_SelectorList) Descriptor() ([]byte, []int) {
	return file_bazel_query_build_proto_rawDescGZIP(), []int{7, 2}
}

func (x *Attribute_SelectorList) GetType() Attribute_Discriminator {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Attribute_INTEGER
}

func (x *Attribute_SelectorList) GetElements() []*Attribute_Selector {
	if x != nil {
		return x.Elements
	}
	return nil
}

type AttributeValue_DictEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           *string                `protobuf:"bytes,1,req,name=key" json:"key,omitempty"`
	Value         *AttributeValue        `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AttributeValue_DictEntry) Reset() {
	*x = AttributeValue_DictEntry{}
	mi := &file_bazel_query_build_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttributeValue_DictEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttributeValue_DictEntry) ProtoMessage() {}

func (x *AttributeValue_DictEntry) ProtoReflect() protoreflect.Message {
	mi := &file_bazel_query_build_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttributeValue_DictEntry.ProtoReflect.Descriptor instead.
func (*AttributeValue_DictEntry) Descriptor() ([]byte, []int) {
	return file_bazel_query_build_proto_rawDescGZIP(), []int{19, 0}
}

func (x *AttributeValue_DictEntry) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (x *AttributeValue_DictEntry) GetValue() *AttributeValue {
	if x != nil {
		return x.Value
	}
	return nil
}

var File_bazel_query_build_proto protoreflect.FileDescriptor

const file_bazel_query_build_proto_rawDesc = "" +
	"\n" +
	"\x17bazel/query/build.proto\x12\x19blaze_query_aspect_mirror\"J\n" +
	"\aLicense\x12!\n" +
	"\flicense_type\x18\x01 \x03(\tR\vlicenseType\x12\x1c\n" +
	"\texception\x18\x02 \x03(\tR\texception\"9\n" +
	"\x0fStringDictEntry\x12\x10\n" +
	"\x03key\x18\x01 \x02(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x02(\tR\x05value\"=\n" +
	"\x13LabelDictUnaryEntry\x12\x10\n" +
	"\x03key\x18\x01 \x02(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x02(\tR\x05value\"<\n" +
	"\x12LabelListDictEntry\x12\x10\n" +
	"\x03key\x18\x01 \x02(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x03(\tR\x05value\"C\n" +
	"\x19LabelKeyedStringDictEntry\x12\x10\n" +
	"\x03key\x18\x01 \x02(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x02(\tR\x05value\"=\n" +
	"\x13StringListDictEntry\x12\x10\n" +
	"\x03key\x18\x01 \x02(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x03(\tR\x05value\"\xe9\x02\n" +
	"\fFilesetEntry\x12\x16\n" +
	"\x06source\x18\x01 \x02(\tR\x06source\x123\n" +
	"\x15destination_directory\x18\x02 \x02(\tR\x14destinationDirectory\x12#\n" +
	"\rfiles_present\x18\a \x01(\bR\ffilesPresent\x12\x12\n" +
	"\x04file\x18\x03 \x03(\tR\x04file\x12\x18\n" +
	"\aexclude\x18\x04 \x03(\tR\aexclude\x12h\n" +
	"\x10symlink_behavior\x18\x05 \x01(\x0e27.blaze_query_aspect_mirror.FilesetEntry.SymlinkBehavior:\x04COPYR\x0fsymlinkBehavior\x12!\n" +
	"\fstrip_prefix\x18\x06 \x01(\tR\vstripPrefix\",\n" +
	"\x0fSymlinkBehavior\x12\b\n" +
	"\x04COPY\x10\x01\x12\x0f\n" +
	"\vDEREFERENCE\x10\x02\"\xf3\x18\n" +
	"\tAttribute\x12\x12\n" +
	"\x04name\x18\x01 \x02(\tR\x04name\x121\n" +
	"\x14explicitly_specified\x18\r \x01(\bR\x13explicitlySpecified\x12\x14\n" +
	"\x05nodep\x18\x14 \x01(\bR\x05nodep\x12,\n" +
	"\x12source_aspect_name\x18\x17 \x01(\tR\x10sourceAspectName\x12F\n" +
	"\x04type\x18\x02 \x02(\x0e22.blaze_query_aspect_mirror.Attribute.DiscriminatorR\x04type\x12\x1b\n" +
	"\tint_value\x18\x03 \x01(\x05R\bintValue\x12!\n" +
	"\fstring_value\x18\x05 \x01(\tR\vstringValue\x12#\n" +
	"\rboolean_value\x18\x0e \x01(\bR\fbooleanValue\x12T\n" +
	"\x0etristate_value\x18\x0f \x01(\x0e2-.blaze_query_aspect_mirror.Attribute.TristateR\rtristateValue\x12*\n" +
	"\x11string_list_value\x18\x06 \x03(\tR\x0fstringListValue\x12<\n" +
	"\alicense\x18\a \x01(\v2\".blaze_query_aspect_mirror.LicenseR\alicense\x12V\n" +
	"\x11string_dict_value\x18\b \x03(\v2*.blaze_query_aspect_mirror.StringDictEntryR\x0fstringDictValue\x12U\n" +
	"\x12fileset_list_value\x18\t \x03(\v2'.blaze_query_aspect_mirror.FilesetEntryR\x10filesetListValue\x12`\n" +
	"\x15label_list_dict_value\x18\n" +
	" \x03(\v2-.blaze_query_aspect_mirror.LabelListDictEntryR\x12labelListDictValue\x12c\n" +
	"\x16string_list_dict_value\x18\v \x03(\v2..blaze_query_aspect_mirror.StringListDictEntryR\x13stringListDictValue\x12$\n" +
	"\x0eint_list_value\x18\x11 \x03(\x05R\fintListValue\x12c\n" +
	"\x16label_dict_unary_value\x18\x13 \x03(\v2..blaze_query_aspect_mirror.LabelDictUnaryEntryR\x13labelDictUnaryValue\x12v\n" +
	"\x1dlabel_keyed_string_dict_value\x18\x16 \x03(\v24.blaze_query_aspect_mirror.LabelKeyedStringDictEntryR\x19labelKeyedStringDictValue\x12V\n" +
	"\rselector_list\x18\x15 \x01(\v21.blaze_query_aspect_mirror.Attribute.SelectorListR\fselectorList\x12J\n" +
	"\"DEPRECATED_string_dict_unary_value\x18\x12 \x03(\fR\x1eDEPRECATEDStringDictUnaryValue\x1a\xbf\b\n" +
	"\rSelectorEntry\x12\x14\n" +
	"\x05label\x18\x01 \x01(\tR\x05label\x12(\n" +
	"\x10is_default_value\x18\x10 \x01(\bR\x0eisDefaultValue\x12\x1b\n" +
	"\tint_value\x18\x02 \x01(\x05R\bintValue\x12!\n" +
	"\fstring_value\x18\x03 \x01(\tR\vstringValue\x12#\n" +
	"\rboolean_value\x18\x04 \x01(\bR\fbooleanValue\x12T\n" +
	"\x0etristate_value\x18\x05 \x01(\x0e2-.blaze_query_aspect_mirror.Attribute.TristateR\rtristateValue\x12*\n" +
	"\x11string_list_value\x18\x06 \x03(\tR\x0fstringListValue\x12<\n" +
	"\alicense\x18\a \x01(\v2\".blaze_query_aspect_mirror.LicenseR\alicense\x12V\n" +
	"\x11string_dict_value\x18\b \x03(\v2*.blaze_query_aspect_mirror.StringDictEntryR\x0fstringDictValue\x12U\n" +
	"\x12fileset_list_value\x18\t \x03(\v2'.blaze_query_aspect_mirror.FilesetEntryR\x10filesetListValue\x12`\n" +
	"\x15label_list_dict_value\x18\n" +
	" \x03(\v2-.blaze_query_aspect_mirror.LabelListDictEntryR\x12labelListDictValue\x12c\n" +
	"\x16string_list_dict_value\x18\v \x03(\v2..blaze_query_aspect_mirror.StringListDictEntryR\x13stringListDictValue\x12$\n" +
	"\x0eint_list_value\x18\r \x03(\x05R\fintListValue\x12c\n" +
	"\x16label_dict_unary_value\x18\x0f \x03(\v2..blaze_query_aspect_mirror.LabelDictUnaryEntryR\x13labelDictUnaryValue\x12v\n" +
	"\x1dlabel_keyed_string_dict_value\x18\x11 \x03(\v24.blaze_query_aspect_mirror.LabelKeyedStringDictEntryR\x19labelKeyedStringDictValue\x12J\n" +
	"\"DEPRECATED_string_dict_unary_value\x18\x0e \x03(\fR\x1eDEPRECATEDStringDictUnaryValueJ\x04\b\f\x10\r\x1a\xaa\x01\n" +
	"\bSelector\x12L\n" +
	"\aentries\x18\x01 \x03(\v22.blaze_query_aspect_mirror.Attribute.SelectorEntryR\aentries\x12*\n" +
	"\x11has_default_value\x18\x02 \x01(\bR\x0fhasDefaultValue\x12$\n" +
	"\x0eno_match_error\x18\x03 \x01(\tR\fnoMatchError\x1a\xa1\x01\n" +
	"\fSelectorList\x12F\n" +
	"\x04type\x18\x01 \x01(\x0e22.blaze_query_aspect_mirror.Attribute.DiscriminatorR\x04type\x12I\n" +
	"\belements\x18\x02 \x03(\v2-.blaze_query_aspect_mirror.Attribute.SelectorR\belements\"\x8a\x03\n" +
	"\rDiscriminator\x12\v\n" +
	"\aINTEGER\x10\x01\x12\n" +
	"\n" +
	"\x06STRING\x10\x02\x12\t\n" +
	"\x05LABEL\x10\x03\x12\n" +
	"\n" +
	"\x06OUTPUT\x10\x04\x12\x0f\n" +
	"\vSTRING_LIST\x10\x05\x12\x0e\n" +
	"\n" +
	"LABEL_LIST\x10\x06\x12\x0f\n" +
	"\vOUTPUT_LIST\x10\a\x12\x14\n" +
	"\x10DISTRIBUTION_SET\x10\b\x12\v\n" +
	"\aLICENSE\x10\t\x12\x0f\n" +
	"\vSTRING_DICT\x10\n" +
	"\x12\x16\n" +
	"\x12FILESET_ENTRY_LIST\x10\v\x12\x13\n" +
	"\x0fLABEL_LIST_DICT\x10\f\x12\x14\n" +
	"\x10STRING_LIST_DICT\x10\r\x12\v\n" +
	"\aBOOLEAN\x10\x0e\x12\f\n" +
	"\bTRISTATE\x10\x0f\x12\x10\n" +
	"\fINTEGER_LIST\x10\x10\x12\v\n" +
	"\aUNKNOWN\x10\x12\x12\x14\n" +
	"\x10LABEL_DICT_UNARY\x10\x13\x12\x11\n" +
	"\rSELECTOR_LIST\x10\x14\x12\x1b\n" +
	"\x17LABEL_KEYED_STRING_DICT\x10\x15\x12 \n" +
	"\x1cDEPRECATED_STRING_DICT_UNARY\x10\x11\"%\n" +
	"\bTristate\x12\x06\n" +
	"\x02NO\x10\x00\x12\a\n" +
	"\x03YES\x10\x01\x12\b\n" +
	"\x04AUTO\x10\x02J\x04\b\f\x10\rJ\x04\b\x10\x10\x11\"\x86\x05\n" +
	"\x04Rule\x12\x12\n" +
	"\x04name\x18\x01 \x02(\tR\x04name\x12\x1d\n" +
	"\n" +
	"rule_class\x18\x02 \x02(\tR\truleClass\x12\x1a\n" +
	"\blocation\x18\x03 \x01(\tR\blocation\x12B\n" +
	"\tattribute\x18\x04 \x03(\v2$.blaze_query_aspect_mirror.AttributeR\tattribute\x12\x1d\n" +
	"\n" +
	"rule_input\x18\x05 \x03(\tR\truleInput\x12b\n" +
	"\x15configured_rule_input\x18\x0f \x03(\v2..blaze_query_aspect_mirror.ConfiguredRuleInputR\x13configuredRuleInput\x12\x1f\n" +
	"\vrule_output\x18\x06 \x03(\tR\n" +
	"ruleOutput\x12'\n" +
	"\x0fdefault_setting\x18\a \x03(\tR\x0edefaultSetting\x12?\n" +
	"\x1cDEPRECATED_public_by_default\x18\t \x01(\bR\x19DEPRECATEDPublicByDefault\x122\n" +
	"\x15DEPRECATED_is_skylark\x18\n" +
	" \x01(\bR\x13DEPRECATEDIsSkylark\x12A\n" +
	"\x1dskylark_environment_hash_code\x18\f \x01(\tR\x1askylarkEnvironmentHashCode\x12/\n" +
	"\x13instantiation_stack\x18\r \x03(\tR\x12instantiationStack\x12)\n" +
	"\x10definition_stack\x18\x0e \x03(\tR\x0fdefinitionStackJ\x04\b\b\x10\tJ\x04\b\v\x10\f\"\x8d\x01\n" +
	"\x13ConfiguredRuleInput\x12\x14\n" +
	"\x05label\x18\x01 \x01(\tR\x05label\x125\n" +
	"\x16configuration_checksum\x18\x02 \x01(\tR\x15configurationChecksum\x12)\n" +
	"\x10configuration_id\x18\x03 \x01(\rR\x0fconfigurationId\"\x9f\x01\n" +
	"\vRuleSummary\x123\n" +
	"\x04rule\x18\x01 \x02(\v2\x1f.blaze_query_aspect_mirror.RuleR\x04rule\x12?\n" +
	"\n" +
	"dependency\x18\x02 \x03(\v2\x1f.blaze_query_aspect_mirror.RuleR\n" +
	"dependency\x12\x1a\n" +
	"\blocation\x18\x03 \x01(\tR\blocation\"\x8b\x01\n" +
	"\fPackageGroup\x12\x12\n" +
	"\x04name\x18\x01 \x02(\tR\x04name\x12+\n" +
	"\x11contained_package\x18\x02 \x03(\tR\x10containedPackage\x124\n" +
	"\x16included_package_group\x18\x03 \x03(\tR\x14includedPackageGroupJ\x04\b\x04\x10\x05\"b\n" +
	"\x10EnvironmentGroup\x12\x12\n" +
	"\x04name\x18\x01 \x02(\tR\x04name\x12 \n" +
	"\venvironment\x18\x02 \x03(\tR\venvironment\x12\x18\n" +
	"\adefault\x18\x03 \x03(\tR\adefault\"\xc2\x02\n" +
	"\n" +
	"SourceFile\x12\x12\n" +
	"\x04name\x18\x01 \x02(\tR\x04name\x12\x1a\n" +
	"\blocation\x18\x02 \x01(\tR\blocation\x12\x1e\n" +
	"\n" +
	"subinclude\x18\x03 \x03(\tR\n" +
	"subinclude\x12#\n" +
	"\rpackage_group\x18\x04 \x03(\tR\fpackageGroup\x12)\n" +
	"\x10visibility_label\x18\x05 \x03(\tR\x0fvisibilityLabel\x12\x18\n" +
	"\afeature\x18\x06 \x03(\tR\afeature\x12<\n" +
	"\alicense\x18\b \x01(\v2\".blaze_query_aspect_mirror.LicenseR\alicense\x126\n" +
	"\x17package_contains_errors\x18\t \x01(\bR\x15packageContainsErrorsJ\x04\b\a\x10\b\"h\n" +
	"\rGeneratedFile\x12\x12\n" +
	"\x04name\x18\x01 \x02(\tR\x04name\x12'\n" +
	"\x0fgenerating_rule\x18\x02 \x02(\tR\x0egeneratingRule\x12\x1a\n" +
	"\blocation\x18\x03 \x01(\tR\blocation\"\xad\x04\n" +
	"\x06Target\x12C\n" +
	"\x04type\x18\x01 \x02(\x0e2/.blaze_query_aspect_mirror.Target.DiscriminatorR\x04type\x123\n" +
	"\x04rule\x18\x02 \x01(\v2\x1f.blaze_query_aspect_mirror.RuleR\x04rule\x12F\n" +
	"\vsource_file\x18\x03 \x01(\v2%.blaze_query_aspect_mirror.SourceFileR\n" +
	"sourceFile\x12O\n" +
	"\x0egenerated_file\x18\x04 \x01(\v2(.blaze_query_aspect_mirror.GeneratedFileR\rgeneratedFile\x12L\n" +
	"\rpackage_group\x18\x05 \x01(\v2'.blaze_query_aspect_mirror.PackageGroupR\fpackageGroup\x12X\n" +
	"\x11environment_group\x18\x06 \x01(\v2+.blaze_query_aspect_mirror.EnvironmentGroupR\x10environmentGroup\"h\n" +
	"\rDiscriminator\x12\b\n" +
	"\x04RULE\x10\x01\x12\x0f\n" +
	"\vSOURCE_FILE\x10\x02\x12\x12\n" +
	"\x0eGENERATED_FILE\x10\x03\x12\x11\n" +
	"\rPACKAGE_GROUP\x10\x04\x12\x15\n" +
	"\x11ENVIRONMENT_GROUP\x10\x05\"H\n" +
	"\vQueryResult\x129\n" +
	"\x06target\x18\x01 \x03(\v2!.blaze_query_aspect_mirror.TargetR\x06target\"\xce\x01\n" +
	"\x14AllowedRuleClassInfo\x12Z\n" +
	"\x06policy\x18\x01 \x02(\x0e2B.blaze_query_aspect_mirror.AllowedRuleClassInfo.AllowedRuleClassesR\x06policy\x12,\n" +
	"\x12allowed_rule_class\x18\x02 \x03(\tR\x10allowedRuleClass\",\n" +
	"\x12AllowedRuleClasses\x12\a\n" +
	"\x03ANY\x10\x01\x12\r\n" +
	"\tSPECIFIED\x10\x02\"\xa4\x04\n" +
	"\x13AttributeDefinition\x12\x12\n" +
	"\x04name\x18\x01 \x02(\tR\x04name\x12F\n" +
	"\x04type\x18\x02 \x02(\x0e22.blaze_query_aspect_mirror.Attribute.DiscriminatorR\x04type\x12\x1c\n" +
	"\tmandatory\x18\x03 \x01(\bR\tmandatory\x12a\n" +
	"\x14allowed_rule_classes\x18\x04 \x01(\v2/.blaze_query_aspect_mirror.AllowedRuleClassInfoR\x12allowedRuleClasses\x12$\n" +
	"\rdocumentation\x18\x05 \x01(\tR\rdocumentation\x12\x1f\n" +
	"\vallow_empty\x18\x06 \x01(\bR\n" +
	"allowEmpty\x12*\n" +
	"\x11allow_single_file\x18\a \x01(\bR\x0fallowSingleFile\x12C\n" +
	"\adefault\x18\t \x01(\v2).blaze_query_aspect_mirror.AttributeValueR\adefault\x12\x1e\n" +
	"\n" +
	"executable\x18\n" +
	" \x01(\bR\n" +
	"executable\x12\"\n" +
	"\fconfigurable\x18\v \x01(\bR\fconfigurable\x12\x14\n" +
	"\x05nodep\x18\f \x01(\bR\x05nodep\x12\x1e\n" +
	"\vcfg_is_host\x18\r \x01(\bR\tcfgIsHost\"\xb6\x02\n" +
	"\x0eAttributeValue\x12\x10\n" +
	"\x03int\x18\x01 \x01(\x05R\x03int\x12\x16\n" +
	"\x06string\x18\x02 \x01(\tR\x06string\x12\x12\n" +
	"\x04bool\x18\x03 \x01(\bR\x04bool\x12=\n" +
	"\x04list\x18\x04 \x03(\v2).blaze_query_aspect_mirror.AttributeValueR\x04list\x12G\n" +
	"\x04dict\x18\x05 \x03(\v23.blaze_query_aspect_mirror.AttributeValue.DictEntryR\x04dict\x1a^\n" +
	"\tDictEntry\x12\x10\n" +
	"\x03key\x18\x01 \x02(\tR\x03key\x12?\n" +
	"\x05value\x18\x02 \x02(\v2).blaze_query_aspect_mirror.AttributeValueR\x05value\"\xae\x01\n" +
	"\x0eRuleDefinition\x12\x12\n" +
	"\x04name\x18\x01 \x02(\tR\x04name\x12L\n" +
	"\tattribute\x18\x02 \x03(\v2..blaze_query_aspect_mirror.AttributeDefinitionR\tattribute\x12$\n" +
	"\rdocumentation\x18\x03 \x01(\tR\rdocumentation\x12\x14\n" +
	"\x05label\x18\x04 \x01(\tR\x05label\"N\n" +
	"\rBuildLanguage\x12=\n" +
	"\x04rule\x18\x01 \x03(\v2).blaze_query_aspect_mirror.RuleDefinitionR\x04rule"

var (
	file_bazel_query_build_proto_rawDescOnce sync.Once
	file_bazel_query_build_proto_rawDescData []byte
)

func file_bazel_query_build_proto_rawDescGZIP() []byte {
	file_bazel_query_build_proto_rawDescOnce.Do(func() {
		file_bazel_query_build_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_bazel_query_build_proto_rawDesc), len(file_bazel_query_build_proto_rawDesc)))
	})
	return file_bazel_query_build_proto_rawDescData
}

var file_bazel_query_build_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_bazel_query_build_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_bazel_query_build_proto_goTypes = []any{
	(FilesetEntry_SymlinkBehavior)(0),            // 0: blaze_query_aspect_mirror.FilesetEntry.SymlinkBehavior
	(Attribute_Discriminator)(0),                 // 1: blaze_query_aspect_mirror.Attribute.Discriminator
	(Attribute_Tristate)(0),                      // 2: blaze_query_aspect_mirror.Attribute.Tristate
	(Target_Discriminator)(0),                    // 3: blaze_query_aspect_mirror.Target.Discriminator
	(AllowedRuleClassInfo_AllowedRuleClasses)(0), // 4: blaze_query_aspect_mirror.AllowedRuleClassInfo.AllowedRuleClasses
	(*License)(nil),                              // 5: blaze_query_aspect_mirror.License
	(*StringDictEntry)(nil),                      // 6: blaze_query_aspect_mirror.StringDictEntry
	(*LabelDictUnaryEntry)(nil),                  // 7: blaze_query_aspect_mirror.LabelDictUnaryEntry
	(*LabelListDictEntry)(nil),                   // 8: blaze_query_aspect_mirror.LabelListDictEntry
	(*LabelKeyedStringDictEntry)(nil),            // 9: blaze_query_aspect_mirror.LabelKeyedStringDictEntry
	(*StringListDictEntry)(nil),                  // 10: blaze_query_aspect_mirror.StringListDictEntry
	(*FilesetEntry)(nil),                         // 11: blaze_query_aspect_mirror.FilesetEntry
	(*Attribute)(nil),                            // 12: blaze_query_aspect_mirror.Attribute
	(*Rule)(nil),                                 // 13: blaze_query_aspect_mirror.Rule
	(*ConfiguredRuleInput)(nil),                  // 14: blaze_query_aspect_mirror.ConfiguredRuleInput
	(*RuleSummary)(nil),                          // 15: blaze_query_aspect_mirror.RuleSummary
	(*PackageGroup)(nil),                         // 16: blaze_query_aspect_mirror.PackageGroup
	(*EnvironmentGroup)(nil),                     // 17: blaze_query_aspect_mirror.EnvironmentGroup
	(*SourceFile)(nil),                           // 18: blaze_query_aspect_mirror.SourceFile
	(*GeneratedFile)(nil),                        // 19: blaze_query_aspect_mirror.GeneratedFile
	(*Target)(nil),                               // 20: blaze_query_aspect_mirror.Target
	(*QueryResult)(nil),                          // 21: blaze_query_aspect_mirror.QueryResult
	(*AllowedRuleClassInfo)(nil),                 // 22: blaze_query_aspect_mirror.AllowedRuleClassInfo
	(*AttributeDefinition)(nil),                  // 23: blaze_query_aspect_mirror.AttributeDefinition
	(*AttributeValue)(nil),                       // 24: blaze_query_aspect_mirror.AttributeValue
	(*RuleDefinition)(nil),                       // 25: blaze_query_aspect_mirror.RuleDefinition
	(*BuildLanguage)(nil),                        // 26: blaze_query_aspect_mirror.BuildLanguage
	(*Attribute_SelectorEntry)(nil),              // 27: blaze_query_aspect_mirror.Attribute.SelectorEntry
	(*Attribute_Selector)(nil),                   // 28: blaze_query_aspect_mirror.Attribute.Selector
	(*Attribute_SelectorList)(nil),               // 29: blaze_query_aspect_mirror.Attribute.SelectorList
	(*AttributeValue_DictEntry)(nil),             // 30: blaze_query_aspect_mirror.AttributeValue.DictEntry
}
var file_bazel_query_build_proto_depIdxs = []int32{
	0,  // 0: blaze_query_aspect_mirror.FilesetEntry.symlink_behavior:type_name -> blaze_query_aspect_mirror.FilesetEntry.SymlinkBehavior
	1,  // 1: blaze_query_aspect_mirror.Attribute.type:type_name -> blaze_query_aspect_mirror.Attribute.Discriminator
	2,  // 2: blaze_query_aspect_mirror.Attribute.tristate_value:type_name -> blaze_query_aspect_mirror.Attribute.Tristate
	5,  // 3: blaze_query_aspect_mirror.Attribute.license:type_name -> blaze_query_aspect_mirror.License
	6,  // 4: blaze_query_aspect_mirror.Attribute.string_dict_value:type_name -> blaze_query_aspect_mirror.StringDictEntry
	11, // 5: blaze_query_aspect_mirror.Attribute.fileset_list_value:type_name -> blaze_query_aspect_mirror.FilesetEntry
	8,  // 6: blaze_query_aspect_mirror.Attribute.label_list_dict_value:type_name -> blaze_query_aspect_mirror.LabelListDictEntry
	10, // 7: blaze_query_aspect_mirror.Attribute.string_list_dict_value:type_name -> blaze_query_aspect_mirror.StringListDictEntry
	7,  // 8: blaze_query_aspect_mirror.Attribute.label_dict_unary_value:type_name -> blaze_query_aspect_mirror.LabelDictUnaryEntry
	9,  // 9: blaze_query_aspect_mirror.Attribute.label_keyed_string_dict_value:type_name -> blaze_query_aspect_mirror.LabelKeyedStringDictEntry
	29, // 10: blaze_query_aspect_mirror.Attribute.selector_list:type_name -> blaze_query_aspect_mirror.Attribute.SelectorList
	12, // 11: blaze_query_aspect_mirror.Rule.attribute:type_name -> blaze_query_aspect_mirror.Attribute
	14, // 12: blaze_query_aspect_mirror.Rule.configured_rule_input:type_name -> blaze_query_aspect_mirror.ConfiguredRuleInput
	13, // 13: blaze_query_aspect_mirror.RuleSummary.rule:type_name -> blaze_query_aspect_mirror.Rule
	13, // 14: blaze_query_aspect_mirror.RuleSummary.dependency:type_name -> blaze_query_aspect_mirror.Rule
	5,  // 15: blaze_query_aspect_mirror.SourceFile.license:type_name -> blaze_query_aspect_mirror.License
	3,  // 16: blaze_query_aspect_mirror.Target.type:type_name -> blaze_query_aspect_mirror.Target.Discriminator
	13, // 17: blaze_query_aspect_mirror.Target.rule:type_name -> blaze_query_aspect_mirror.Rule
	18, // 18: blaze_query_aspect_mirror.Target.source_file:type_name -> blaze_query_aspect_mirror.SourceFile
	19, // 19: blaze_query_aspect_mirror.Target.generated_file:type_name -> blaze_query_aspect_mirror.GeneratedFile
	16, // 20: blaze_query_aspect_mirror.Target.package_group:type_name -> blaze_query_aspect_mirror.PackageGroup
	17, // 21: blaze_query_aspect_mirror.Target.environment_group:type_name -> blaze_query_aspect_mirror.EnvironmentGroup
	20, // 22: blaze_query_aspect_mirror.QueryResult.target:type_name -> blaze_query_aspect_mirror.Target
	4,  // 23: blaze_query_aspect_mirror.AllowedRuleClassInfo.policy:type_name -> blaze_query_aspect_mirror.AllowedRuleClassInfo.AllowedRuleClasses
	1,  // 24: blaze_query_aspect_mirror.AttributeDefinition.type:type_name -> blaze_query_aspect_mirror.Attribute.Discriminator
	22, // 25: blaze_query_aspect_mirror.AttributeDefinition.allowed_rule_classes:type_name -> blaze_query_aspect_mirror.AllowedRuleClassInfo
	24, // 26: blaze_query_aspect_mirror.AttributeDefinition.default:type_name -> blaze_query_aspect_mirror.AttributeValue
	24, // 27: blaze_query_aspect_mirror.AttributeValue.list:type_name -> blaze_query_aspect_mirror.AttributeValue
	30, // 28: blaze_query_aspect_mirror.AttributeValue.dict:type_name -> blaze_query_aspect_mirror.AttributeValue.DictEntry
	23, // 29: blaze_query_aspect_mirror.RuleDefinition.attribute:type_name -> blaze_query_aspect_mirror.AttributeDefinition
	25, // 30: blaze_query_aspect_mirror.BuildLanguage.rule:type_name -> blaze_query_aspect_mirror.RuleDefinition
	2,  // 31: blaze_query_aspect_mirror.Attribute.SelectorEntry.tristate_value:type_name -> blaze_query_aspect_mirror.Attribute.Tristate
	5,  // 32: blaze_query_aspect_mirror.Attribute.SelectorEntry.license:type_name -> blaze_query_aspect_mirror.License
	6,  // 33: blaze_query_aspect_mirror.Attribute.SelectorEntry.string_dict_value:type_name -> blaze_query_aspect_mirror.StringDictEntry
	11, // 34: blaze_query_aspect_mirror.Attribute.SelectorEntry.fileset_list_value:type_name -> blaze_query_aspect_mirror.FilesetEntry
	8,  // 35: blaze_query_aspect_mirror.Attribute.SelectorEntry.label_list_dict_value:type_name -> blaze_query_aspect_mirror.LabelListDictEntry
	10, // 36: blaze_query_aspect_mirror.Attribute.SelectorEntry.string_list_dict_value:type_name -> blaze_query_aspect_mirror.StringListDictEntry
	7,  // 37: blaze_query_aspect_mirror.Attribute.SelectorEntry.label_dict_unary_value:type_name -> blaze_query_aspect_mirror.LabelDictUnaryEntry
	9,  // 38: blaze_query_aspect_mirror.Attribute.SelectorEntry.label_keyed_string_dict_value:type_name -> blaze_query_aspect_mirror.LabelKeyedStringDictEntry
	27, // 39: blaze_query_aspect_mirror.Attribute.Selector.entries:type_name -> blaze_query_aspect_mirror.Attribute.SelectorEntry
	1,  // 40: blaze_query_aspect_mirror.Attribute.SelectorList.type:type_name -> blaze_query_aspect_mirror.Attribute.Discriminator
	28, // 41: blaze_query_aspect_mirror.Attribute.SelectorList.elements:type_name -> blaze_query_aspect_mirror.Attribute.Selector
	24, // 42: blaze_query_aspect_mirror.AttributeValue.DictEntry.value:type_name -> blaze_query_aspect_mirror.AttributeValue
	43, // [43:43] is the sub-list for method output_type
	43, // [43:43] is the sub-list for method input_type
	43, // [43:43] is the sub-list for extension type_name
	43, // [43:43] is the sub-list for extension extendee
	0,  // [0:43] is the sub-list for field type_name
}

func init() { file_bazel_query_build_proto_init() }
func file_bazel_query_build_proto_init() {
	if File_bazel_query_build_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_bazel_query_build_proto_rawDesc), len(file_bazel_query_build_proto_rawDesc)),
			NumEnums:      5,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bazel_query_build_proto_goTypes,
		DependencyIndexes: file_bazel_query_build_proto_depIdxs,
		EnumInfos:         file_bazel_query_build_proto_enumTypes,
		MessageInfos:      file_bazel_query_build_proto_msgTypes,
	}.Build()
	File_bazel_query_build_proto = out.File
	file_bazel_query_build_proto_goTypes = nil
	file_bazel_query_build_proto_depIdxs = nil
}
