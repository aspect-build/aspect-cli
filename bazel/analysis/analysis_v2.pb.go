// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v5.27.3
// source: bazel/analysis/analysis_v2.proto

package analysis

import (
	query "github.com/aspect-build/aspect-cli/bazel/query"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ActionGraphContainer struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Artifacts         []*Artifact            `protobuf:"bytes,1,rep,name=artifacts,proto3" json:"artifacts,omitempty"`
	Actions           []*Action              `protobuf:"bytes,2,rep,name=actions,proto3" json:"actions,omitempty"`
	Targets           []*Target              `protobuf:"bytes,3,rep,name=targets,proto3" json:"targets,omitempty"`
	DepSetOfFiles     []*DepSetOfFiles       `protobuf:"bytes,4,rep,name=dep_set_of_files,json=depSetOfFiles,proto3" json:"dep_set_of_files,omitempty"`
	Configuration     []*Configuration       `protobuf:"bytes,5,rep,name=configuration,proto3" json:"configuration,omitempty"`
	AspectDescriptors []*AspectDescriptor    `protobuf:"bytes,6,rep,name=aspect_descriptors,json=aspectDescriptors,proto3" json:"aspect_descriptors,omitempty"`
	RuleClasses       []*RuleClass           `protobuf:"bytes,7,rep,name=rule_classes,json=ruleClasses,proto3" json:"rule_classes,omitempty"`
	PathFragments     []*PathFragment        `protobuf:"bytes,8,rep,name=path_fragments,json=pathFragments,proto3" json:"path_fragments,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ActionGraphContainer) Reset() {
	*x = ActionGraphContainer{}
	mi := &file_bazel_analysis_analysis_v2_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActionGraphContainer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionGraphContainer) ProtoMessage() {}

func (x *ActionGraphContainer) ProtoReflect() protoreflect.Message {
	mi := &file_bazel_analysis_analysis_v2_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionGraphContainer.ProtoReflect.Descriptor instead.
func (*ActionGraphContainer) Descriptor() ([]byte, []int) {
	return file_bazel_analysis_analysis_v2_proto_rawDescGZIP(), []int{0}
}

func (x *ActionGraphContainer) GetArtifacts() []*Artifact {
	if x != nil {
		return x.Artifacts
	}
	return nil
}

func (x *ActionGraphContainer) GetActions() []*Action {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *ActionGraphContainer) GetTargets() []*Target {
	if x != nil {
		return x.Targets
	}
	return nil
}

func (x *ActionGraphContainer) GetDepSetOfFiles() []*DepSetOfFiles {
	if x != nil {
		return x.DepSetOfFiles
	}
	return nil
}

func (x *ActionGraphContainer) GetConfiguration() []*Configuration {
	if x != nil {
		return x.Configuration
	}
	return nil
}

func (x *ActionGraphContainer) GetAspectDescriptors() []*AspectDescriptor {
	if x != nil {
		return x.AspectDescriptors
	}
	return nil
}

func (x *ActionGraphContainer) GetRuleClasses() []*RuleClass {
	if x != nil {
		return x.RuleClasses
	}
	return nil
}

func (x *ActionGraphContainer) GetPathFragments() []*PathFragment {
	if x != nil {
		return x.PathFragments
	}
	return nil
}

type Artifact struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PathFragmentId uint32                 `protobuf:"varint,2,opt,name=path_fragment_id,json=pathFragmentId,proto3" json:"path_fragment_id,omitempty"`
	IsTreeArtifact bool                   `protobuf:"varint,3,opt,name=is_tree_artifact,json=isTreeArtifact,proto3" json:"is_tree_artifact,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Artifact) Reset() {
	*x = Artifact{}
	mi := &file_bazel_analysis_analysis_v2_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Artifact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Artifact) ProtoMessage() {}

func (x *Artifact) ProtoReflect() protoreflect.Message {
	mi := &file_bazel_analysis_analysis_v2_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Artifact.ProtoReflect.Descriptor instead.
func (*Artifact) Descriptor() ([]byte, []int) {
	return file_bazel_analysis_analysis_v2_proto_rawDescGZIP(), []int{1}
}

func (x *Artifact) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Artifact) GetPathFragmentId() uint32 {
	if x != nil {
		return x.PathFragmentId
	}
	return 0
}

func (x *Artifact) GetIsTreeArtifact() bool {
	if x != nil {
		return x.IsTreeArtifact
	}
	return false
}

type Action struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	TargetId                uint32                 `protobuf:"varint,1,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	AspectDescriptorIds     []uint32               `protobuf:"varint,2,rep,packed,name=aspect_descriptor_ids,json=aspectDescriptorIds,proto3" json:"aspect_descriptor_ids,omitempty"`
	ActionKey               string                 `protobuf:"bytes,3,opt,name=action_key,json=actionKey,proto3" json:"action_key,omitempty"`
	Mnemonic                string                 `protobuf:"bytes,4,opt,name=mnemonic,proto3" json:"mnemonic,omitempty"`
	ConfigurationId         uint32                 `protobuf:"varint,5,opt,name=configuration_id,json=configurationId,proto3" json:"configuration_id,omitempty"`
	Arguments               []string               `protobuf:"bytes,6,rep,name=arguments,proto3" json:"arguments,omitempty"`
	EnvironmentVariables    []*KeyValuePair        `protobuf:"bytes,7,rep,name=environment_variables,json=environmentVariables,proto3" json:"environment_variables,omitempty"`
	InputDepSetIds          []uint32               `protobuf:"varint,8,rep,packed,name=input_dep_set_ids,json=inputDepSetIds,proto3" json:"input_dep_set_ids,omitempty"`
	SchedulingDepDepSetIds  []uint32               `protobuf:"varint,20,rep,packed,name=scheduling_dep_dep_set_ids,json=schedulingDepDepSetIds,proto3" json:"scheduling_dep_dep_set_ids,omitempty"`
	OutputIds               []uint32               `protobuf:"varint,9,rep,packed,name=output_ids,json=outputIds,proto3" json:"output_ids,omitempty"`
	DiscoversInputs         bool                   `protobuf:"varint,10,opt,name=discovers_inputs,json=discoversInputs,proto3" json:"discovers_inputs,omitempty"`
	ExecutionInfo           []*KeyValuePair        `protobuf:"bytes,11,rep,name=execution_info,json=executionInfo,proto3" json:"execution_info,omitempty"`
	ParamFiles              []*ParamFile           `protobuf:"bytes,12,rep,name=param_files,json=paramFiles,proto3" json:"param_files,omitempty"`
	PrimaryOutputId         uint32                 `protobuf:"varint,13,opt,name=primary_output_id,json=primaryOutputId,proto3" json:"primary_output_id,omitempty"`
	ExecutionPlatform       string                 `protobuf:"bytes,14,opt,name=execution_platform,json=executionPlatform,proto3" json:"execution_platform,omitempty"`
	TemplateContent         string                 `protobuf:"bytes,15,opt,name=template_content,json=templateContent,proto3" json:"template_content,omitempty"`
	Substitutions           []*KeyValuePair        `protobuf:"bytes,16,rep,name=substitutions,proto3" json:"substitutions,omitempty"`
	FileContents            string                 `protobuf:"bytes,17,opt,name=file_contents,json=fileContents,proto3" json:"file_contents,omitempty"`
	UnresolvedSymlinkTarget string                 `protobuf:"bytes,18,opt,name=unresolved_symlink_target,json=unresolvedSymlinkTarget,proto3" json:"unresolved_symlink_target,omitempty"`
	IsExecutable            bool                   `protobuf:"varint,19,opt,name=is_executable,json=isExecutable,proto3" json:"is_executable,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *Action) Reset() {
	*x = Action{}
	mi := &file_bazel_analysis_analysis_v2_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action) ProtoMessage() {}

func (x *Action) ProtoReflect() protoreflect.Message {
	mi := &file_bazel_analysis_analysis_v2_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action.ProtoReflect.Descriptor instead.
func (*Action) Descriptor() ([]byte, []int) {
	return file_bazel_analysis_analysis_v2_proto_rawDescGZIP(), []int{2}
}

func (x *Action) GetTargetId() uint32 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *Action) GetAspectDescriptorIds() []uint32 {
	if x != nil {
		return x.AspectDescriptorIds
	}
	return nil
}

func (x *Action) GetActionKey() string {
	if x != nil {
		return x.ActionKey
	}
	return ""
}

func (x *Action) GetMnemonic() string {
	if x != nil {
		return x.Mnemonic
	}
	return ""
}

func (x *Action) GetConfigurationId() uint32 {
	if x != nil {
		return x.ConfigurationId
	}
	return 0
}

func (x *Action) GetArguments() []string {
	if x != nil {
		return x.Arguments
	}
	return nil
}

func (x *Action) GetEnvironmentVariables() []*KeyValuePair {
	if x != nil {
		return x.EnvironmentVariables
	}
	return nil
}

func (x *Action) GetInputDepSetIds() []uint32 {
	if x != nil {
		return x.InputDepSetIds
	}
	return nil
}

func (x *Action) GetSchedulingDepDepSetIds() []uint32 {
	if x != nil {
		return x.SchedulingDepDepSetIds
	}
	return nil
}

func (x *Action) GetOutputIds() []uint32 {
	if x != nil {
		return x.OutputIds
	}
	return nil
}

func (x *Action) GetDiscoversInputs() bool {
	if x != nil {
		return x.DiscoversInputs
	}
	return false
}

func (x *Action) GetExecutionInfo() []*KeyValuePair {
	if x != nil {
		return x.ExecutionInfo
	}
	return nil
}

func (x *Action) GetParamFiles() []*ParamFile {
	if x != nil {
		return x.ParamFiles
	}
	return nil
}

func (x *Action) GetPrimaryOutputId() uint32 {
	if x != nil {
		return x.PrimaryOutputId
	}
	return 0
}

func (x *Action) GetExecutionPlatform() string {
	if x != nil {
		return x.ExecutionPlatform
	}
	return ""
}

func (x *Action) GetTemplateContent() string {
	if x != nil {
		return x.TemplateContent
	}
	return ""
}

func (x *Action) GetSubstitutions() []*KeyValuePair {
	if x != nil {
		return x.Substitutions
	}
	return nil
}

func (x *Action) GetFileContents() string {
	if x != nil {
		return x.FileContents
	}
	return ""
}

func (x *Action) GetUnresolvedSymlinkTarget() string {
	if x != nil {
		return x.UnresolvedSymlinkTarget
	}
	return ""
}

func (x *Action) GetIsExecutable() bool {
	if x != nil {
		return x.IsExecutable
	}
	return false
}

type Target struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Label         string                 `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	RuleClassId   uint32                 `protobuf:"varint,3,opt,name=rule_class_id,json=ruleClassId,proto3" json:"rule_class_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Target) Reset() {
	*x = Target{}
	mi := &file_bazel_analysis_analysis_v2_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Target) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target) ProtoMessage() {}

func (x *Target) ProtoReflect() protoreflect.Message {
	mi := &file_bazel_analysis_analysis_v2_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target.ProtoReflect.Descriptor instead.
func (*Target) Descriptor() ([]byte, []int) {
	return file_bazel_analysis_analysis_v2_proto_rawDescGZIP(), []int{3}
}

func (x *Target) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Target) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *Target) GetRuleClassId() uint32 {
	if x != nil {
		return x.RuleClassId
	}
	return 0
}

type RuleClass struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RuleClass) Reset() {
	*x = RuleClass{}
	mi := &file_bazel_analysis_analysis_v2_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuleClass) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuleClass) ProtoMessage() {}

func (x *RuleClass) ProtoReflect() protoreflect.Message {
	mi := &file_bazel_analysis_analysis_v2_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuleClass.ProtoReflect.Descriptor instead.
func (*RuleClass) Descriptor() ([]byte, []int) {
	return file_bazel_analysis_analysis_v2_proto_rawDescGZIP(), []int{4}
}

func (x *RuleClass) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RuleClass) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type AspectDescriptor struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Parameters    []*KeyValuePair        `protobuf:"bytes,3,rep,name=parameters,proto3" json:"parameters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AspectDescriptor) Reset() {
	*x = AspectDescriptor{}
	mi := &file_bazel_analysis_analysis_v2_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AspectDescriptor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AspectDescriptor) ProtoMessage() {}

func (x *AspectDescriptor) ProtoReflect() protoreflect.Message {
	mi := &file_bazel_analysis_analysis_v2_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AspectDescriptor.ProtoReflect.Descriptor instead.
func (*AspectDescriptor) Descriptor() ([]byte, []int) {
	return file_bazel_analysis_analysis_v2_proto_rawDescGZIP(), []int{5}
}

func (x *AspectDescriptor) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AspectDescriptor) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AspectDescriptor) GetParameters() []*KeyValuePair {
	if x != nil {
		return x.Parameters
	}
	return nil
}

type DepSetOfFiles struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Id                  uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TransitiveDepSetIds []uint32               `protobuf:"varint,2,rep,packed,name=transitive_dep_set_ids,json=transitiveDepSetIds,proto3" json:"transitive_dep_set_ids,omitempty"`
	DirectArtifactIds   []uint32               `protobuf:"varint,3,rep,packed,name=direct_artifact_ids,json=directArtifactIds,proto3" json:"direct_artifact_ids,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *DepSetOfFiles) Reset() {
	*x = DepSetOfFiles{}
	mi := &file_bazel_analysis_analysis_v2_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DepSetOfFiles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepSetOfFiles) ProtoMessage() {}

func (x *DepSetOfFiles) ProtoReflect() protoreflect.Message {
	mi := &file_bazel_analysis_analysis_v2_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepSetOfFiles.ProtoReflect.Descriptor instead.
func (*DepSetOfFiles) Descriptor() ([]byte, []int) {
	return file_bazel_analysis_analysis_v2_proto_rawDescGZIP(), []int{6}
}

func (x *DepSetOfFiles) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DepSetOfFiles) GetTransitiveDepSetIds() []uint32 {
	if x != nil {
		return x.TransitiveDepSetIds
	}
	return nil
}

func (x *DepSetOfFiles) GetDirectArtifactIds() []uint32 {
	if x != nil {
		return x.DirectArtifactIds
	}
	return nil
}

type Configuration struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Mnemonic        string                 `protobuf:"bytes,2,opt,name=mnemonic,proto3" json:"mnemonic,omitempty"`
	PlatformName    string                 `protobuf:"bytes,3,opt,name=platform_name,json=platformName,proto3" json:"platform_name,omitempty"`
	Checksum        string                 `protobuf:"bytes,4,opt,name=checksum,proto3" json:"checksum,omitempty"`
	IsTool          bool                   `protobuf:"varint,5,opt,name=is_tool,json=isTool,proto3" json:"is_tool,omitempty"`
	Fragments       []*Fragment            `protobuf:"bytes,6,rep,name=fragments,proto3" json:"fragments,omitempty"`
	FragmentOptions []*FragmentOptions     `protobuf:"bytes,7,rep,name=fragment_options,json=fragmentOptions,proto3" json:"fragment_options,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Configuration) Reset() {
	*x = Configuration{}
	mi := &file_bazel_analysis_analysis_v2_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Configuration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Configuration) ProtoMessage() {}

func (x *Configuration) ProtoReflect() protoreflect.Message {
	mi := &file_bazel_analysis_analysis_v2_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Configuration.ProtoReflect.Descriptor instead.
func (*Configuration) Descriptor() ([]byte, []int) {
	return file_bazel_analysis_analysis_v2_proto_rawDescGZIP(), []int{7}
}

func (x *Configuration) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Configuration) GetMnemonic() string {
	if x != nil {
		return x.Mnemonic
	}
	return ""
}

func (x *Configuration) GetPlatformName() string {
	if x != nil {
		return x.PlatformName
	}
	return ""
}

func (x *Configuration) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

func (x *Configuration) GetIsTool() bool {
	if x != nil {
		return x.IsTool
	}
	return false
}

func (x *Configuration) GetFragments() []*Fragment {
	if x != nil {
		return x.Fragments
	}
	return nil
}

func (x *Configuration) GetFragmentOptions() []*FragmentOptions {
	if x != nil {
		return x.FragmentOptions
	}
	return nil
}

type Fragment struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Name                string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	FragmentOptionNames []string               `protobuf:"bytes,2,rep,name=fragment_option_names,json=fragmentOptionNames,proto3" json:"fragment_option_names,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Fragment) Reset() {
	*x = Fragment{}
	mi := &file_bazel_analysis_analysis_v2_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Fragment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fragment) ProtoMessage() {}

func (x *Fragment) ProtoReflect() protoreflect.Message {
	mi := &file_bazel_analysis_analysis_v2_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fragment.ProtoReflect.Descriptor instead.
func (*Fragment) Descriptor() ([]byte, []int) {
	return file_bazel_analysis_analysis_v2_proto_rawDescGZIP(), []int{8}
}

func (x *Fragment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Fragment) GetFragmentOptionNames() []string {
	if x != nil {
		return x.FragmentOptionNames
	}
	return nil
}

type FragmentOptions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Options       []*Option              `protobuf:"bytes,2,rep,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FragmentOptions) Reset() {
	*x = FragmentOptions{}
	mi := &file_bazel_analysis_analysis_v2_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FragmentOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FragmentOptions) ProtoMessage() {}

func (x *FragmentOptions) ProtoReflect() protoreflect.Message {
	mi := &file_bazel_analysis_analysis_v2_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FragmentOptions.ProtoReflect.Descriptor instead.
func (*FragmentOptions) Descriptor() ([]byte, []int) {
	return file_bazel_analysis_analysis_v2_proto_rawDescGZIP(), []int{9}
}

func (x *FragmentOptions) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FragmentOptions) GetOptions() []*Option {
	if x != nil {
		return x.Options
	}
	return nil
}

type Option struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          *string                `protobuf:"bytes,1,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Value         *string                `protobuf:"bytes,2,opt,name=value,proto3,oneof" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Option) Reset() {
	*x = Option{}
	mi := &file_bazel_analysis_analysis_v2_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Option) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Option) ProtoMessage() {}

func (x *Option) ProtoReflect() protoreflect.Message {
	mi := &file_bazel_analysis_analysis_v2_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Option.ProtoReflect.Descriptor instead.
func (*Option) Descriptor() ([]byte, []int) {
	return file_bazel_analysis_analysis_v2_proto_rawDescGZIP(), []int{10}
}

func (x *Option) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Option) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type KeyValuePair struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeyValuePair) Reset() {
	*x = KeyValuePair{}
	mi := &file_bazel_analysis_analysis_v2_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeyValuePair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyValuePair) ProtoMessage() {}

func (x *KeyValuePair) ProtoReflect() protoreflect.Message {
	mi := &file_bazel_analysis_analysis_v2_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyValuePair.ProtoReflect.Descriptor instead.
func (*KeyValuePair) Descriptor() ([]byte, []int) {
	return file_bazel_analysis_analysis_v2_proto_rawDescGZIP(), []int{11}
}

func (x *KeyValuePair) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *KeyValuePair) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type ConfiguredTarget struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	Target *query.Target          `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	// Deprecated: Marked as deprecated in bazel/analysis/analysis_v2.proto.
	Configuration   *Configuration `protobuf:"bytes,2,opt,name=configuration,proto3" json:"configuration,omitempty"`
	ConfigurationId uint32         `protobuf:"varint,3,opt,name=configuration_id,json=configurationId,proto3" json:"configuration_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ConfiguredTarget) Reset() {
	*x = ConfiguredTarget{}
	mi := &file_bazel_analysis_analysis_v2_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfiguredTarget) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfiguredTarget) ProtoMessage() {}

func (x *ConfiguredTarget) ProtoReflect() protoreflect.Message {
	mi := &file_bazel_analysis_analysis_v2_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfiguredTarget.ProtoReflect.Descriptor instead.
func (*ConfiguredTarget) Descriptor() ([]byte, []int) {
	return file_bazel_analysis_analysis_v2_proto_rawDescGZIP(), []int{12}
}

func (x *ConfiguredTarget) GetTarget() *query.Target {
	if x != nil {
		return x.Target
	}
	return nil
}

// Deprecated: Marked as deprecated in bazel/analysis/analysis_v2.proto.
func (x *ConfiguredTarget) GetConfiguration() *Configuration {
	if x != nil {
		return x.Configuration
	}
	return nil
}

func (x *ConfiguredTarget) GetConfigurationId() uint32 {
	if x != nil {
		return x.ConfigurationId
	}
	return 0
}

type CqueryResult struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Results        []*ConfiguredTarget    `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Configurations []*Configuration       `protobuf:"bytes,2,rep,name=configurations,proto3" json:"configurations,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CqueryResult) Reset() {
	*x = CqueryResult{}
	mi := &file_bazel_analysis_analysis_v2_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CqueryResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CqueryResult) ProtoMessage() {}

func (x *CqueryResult) ProtoReflect() protoreflect.Message {
	mi := &file_bazel_analysis_analysis_v2_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CqueryResult.ProtoReflect.Descriptor instead.
func (*CqueryResult) Descriptor() ([]byte, []int) {
	return file_bazel_analysis_analysis_v2_proto_rawDescGZIP(), []int{13}
}

func (x *CqueryResult) GetResults() []*ConfiguredTarget {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *CqueryResult) GetConfigurations() []*Configuration {
	if x != nil {
		return x.Configurations
	}
	return nil
}

type ParamFile struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExecPath      string                 `protobuf:"bytes,1,opt,name=exec_path,json=execPath,proto3" json:"exec_path,omitempty"`
	Arguments     []string               `protobuf:"bytes,2,rep,name=arguments,proto3" json:"arguments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ParamFile) Reset() {
	*x = ParamFile{}
	mi := &file_bazel_analysis_analysis_v2_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ParamFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParamFile) ProtoMessage() {}

func (x *ParamFile) ProtoReflect() protoreflect.Message {
	mi := &file_bazel_analysis_analysis_v2_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParamFile.ProtoReflect.Descriptor instead.
func (*ParamFile) Descriptor() ([]byte, []int) {
	return file_bazel_analysis_analysis_v2_proto_rawDescGZIP(), []int{14}
}

func (x *ParamFile) GetExecPath() string {
	if x != nil {
		return x.ExecPath
	}
	return ""
}

func (x *ParamFile) GetArguments() []string {
	if x != nil {
		return x.Arguments
	}
	return nil
}

type PathFragment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Label         string                 `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	ParentId      uint32                 `protobuf:"varint,3,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PathFragment) Reset() {
	*x = PathFragment{}
	mi := &file_bazel_analysis_analysis_v2_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PathFragment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PathFragment) ProtoMessage() {}

func (x *PathFragment) ProtoReflect() protoreflect.Message {
	mi := &file_bazel_analysis_analysis_v2_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PathFragment.ProtoReflect.Descriptor instead.
func (*PathFragment) Descriptor() ([]byte, []int) {
	return file_bazel_analysis_analysis_v2_proto_rawDescGZIP(), []int{15}
}

func (x *PathFragment) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PathFragment) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *PathFragment) GetParentId() uint32 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

var File_bazel_analysis_analysis_v2_proto protoreflect.FileDescriptor

const file_bazel_analysis_analysis_v2_proto_rawDesc = "" +
	"\n" +
	" bazel/analysis/analysis_v2.proto\x12\x05bazel\x1a\x17bazel/query/build.proto\"\xcb\x03\n" +
	"\x14ActionGraphContainer\x12-\n" +
	"\tartifacts\x18\x01 \x03(\v2\x0f.bazel.ArtifactR\tartifacts\x12'\n" +
	"\aactions\x18\x02 \x03(\v2\r.bazel.ActionR\aactions\x12'\n" +
	"\atargets\x18\x03 \x03(\v2\r.bazel.TargetR\atargets\x12=\n" +
	"\x10dep_set_of_files\x18\x04 \x03(\v2\x14.bazel.DepSetOfFilesR\rdepSetOfFiles\x12:\n" +
	"\rconfiguration\x18\x05 \x03(\v2\x14.bazel.ConfigurationR\rconfiguration\x12F\n" +
	"\x12aspect_descriptors\x18\x06 \x03(\v2\x17.bazel.AspectDescriptorR\x11aspectDescriptors\x123\n" +
	"\frule_classes\x18\a \x03(\v2\x10.bazel.RuleClassR\vruleClasses\x12:\n" +
	"\x0epath_fragments\x18\b \x03(\v2\x13.bazel.PathFragmentR\rpathFragments\"n\n" +
	"\bArtifact\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12(\n" +
	"\x10path_fragment_id\x18\x02 \x01(\rR\x0epathFragmentId\x12(\n" +
	"\x10is_tree_artifact\x18\x03 \x01(\bR\x0eisTreeArtifact\"\x8e\a\n" +
	"\x06Action\x12\x1b\n" +
	"\ttarget_id\x18\x01 \x01(\rR\btargetId\x122\n" +
	"\x15aspect_descriptor_ids\x18\x02 \x03(\rR\x13aspectDescriptorIds\x12\x1d\n" +
	"\n" +
	"action_key\x18\x03 \x01(\tR\tactionKey\x12\x1a\n" +
	"\bmnemonic\x18\x04 \x01(\tR\bmnemonic\x12)\n" +
	"\x10configuration_id\x18\x05 \x01(\rR\x0fconfigurationId\x12\x1c\n" +
	"\targuments\x18\x06 \x03(\tR\targuments\x12H\n" +
	"\x15environment_variables\x18\a \x03(\v2\x13.bazel.KeyValuePairR\x14environmentVariables\x12)\n" +
	"\x11input_dep_set_ids\x18\b \x03(\rR\x0einputDepSetIds\x12:\n" +
	"\x1ascheduling_dep_dep_set_ids\x18\x14 \x03(\rR\x16schedulingDepDepSetIds\x12\x1d\n" +
	"\n" +
	"output_ids\x18\t \x03(\rR\toutputIds\x12)\n" +
	"\x10discovers_inputs\x18\n" +
	" \x01(\bR\x0fdiscoversInputs\x12:\n" +
	"\x0eexecution_info\x18\v \x03(\v2\x13.bazel.KeyValuePairR\rexecutionInfo\x121\n" +
	"\vparam_files\x18\f \x03(\v2\x10.bazel.ParamFileR\n" +
	"paramFiles\x12*\n" +
	"\x11primary_output_id\x18\r \x01(\rR\x0fprimaryOutputId\x12-\n" +
	"\x12execution_platform\x18\x0e \x01(\tR\x11executionPlatform\x12)\n" +
	"\x10template_content\x18\x0f \x01(\tR\x0ftemplateContent\x129\n" +
	"\rsubstitutions\x18\x10 \x03(\v2\x13.bazel.KeyValuePairR\rsubstitutions\x12#\n" +
	"\rfile_contents\x18\x11 \x01(\tR\ffileContents\x12:\n" +
	"\x19unresolved_symlink_target\x18\x12 \x01(\tR\x17unresolvedSymlinkTarget\x12#\n" +
	"\ris_executable\x18\x13 \x01(\bR\fisExecutable\"R\n" +
	"\x06Target\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12\x14\n" +
	"\x05label\x18\x02 \x01(\tR\x05label\x12\"\n" +
	"\rrule_class_id\x18\x03 \x01(\rR\vruleClassId\"/\n" +
	"\tRuleClass\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\"k\n" +
	"\x10AspectDescriptor\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x123\n" +
	"\n" +
	"parameters\x18\x03 \x03(\v2\x13.bazel.KeyValuePairR\n" +
	"parameters\"\x84\x01\n" +
	"\rDepSetOfFiles\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x123\n" +
	"\x16transitive_dep_set_ids\x18\x02 \x03(\rR\x13transitiveDepSetIds\x12.\n" +
	"\x13direct_artifact_ids\x18\x03 \x03(\rR\x11directArtifactIds\"\x87\x02\n" +
	"\rConfiguration\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12\x1a\n" +
	"\bmnemonic\x18\x02 \x01(\tR\bmnemonic\x12#\n" +
	"\rplatform_name\x18\x03 \x01(\tR\fplatformName\x12\x1a\n" +
	"\bchecksum\x18\x04 \x01(\tR\bchecksum\x12\x17\n" +
	"\ais_tool\x18\x05 \x01(\bR\x06isTool\x12-\n" +
	"\tfragments\x18\x06 \x03(\v2\x0f.bazel.FragmentR\tfragments\x12A\n" +
	"\x10fragment_options\x18\a \x03(\v2\x16.bazel.FragmentOptionsR\x0ffragmentOptions\"R\n" +
	"\bFragment\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x122\n" +
	"\x15fragment_option_names\x18\x02 \x03(\tR\x13fragmentOptionNames\"N\n" +
	"\x0fFragmentOptions\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12'\n" +
	"\aoptions\x18\x02 \x03(\v2\r.bazel.OptionR\aoptions\"O\n" +
	"\x06Option\x12\x17\n" +
	"\x04name\x18\x01 \x01(\tH\x00R\x04name\x88\x01\x01\x12\x19\n" +
	"\x05value\x18\x02 \x01(\tH\x01R\x05value\x88\x01\x01B\a\n" +
	"\x05_nameB\b\n" +
	"\x06_value\"6\n" +
	"\fKeyValuePair\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\"\xb8\x01\n" +
	"\x10ConfiguredTarget\x129\n" +
	"\x06target\x18\x01 \x01(\v2!.blaze_query_aspect_mirror.TargetR\x06target\x12>\n" +
	"\rconfiguration\x18\x02 \x01(\v2\x14.bazel.ConfigurationB\x02\x18\x01R\rconfiguration\x12)\n" +
	"\x10configuration_id\x18\x03 \x01(\rR\x0fconfigurationId\"\x7f\n" +
	"\fCqueryResult\x121\n" +
	"\aresults\x18\x01 \x03(\v2\x17.bazel.ConfiguredTargetR\aresults\x12<\n" +
	"\x0econfigurations\x18\x02 \x03(\v2\x14.bazel.ConfigurationR\x0econfigurations\"F\n" +
	"\tParamFile\x12\x1b\n" +
	"\texec_path\x18\x01 \x01(\tR\bexecPath\x12\x1c\n" +
	"\targuments\x18\x02 \x03(\tR\targuments\"Q\n" +
	"\fPathFragment\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12\x14\n" +
	"\x05label\x18\x02 \x01(\tR\x05label\x12\x1b\n" +
	"\tparent_id\x18\x03 \x01(\rR\bparentIdb\x06proto3"

var (
	file_bazel_analysis_analysis_v2_proto_rawDescOnce sync.Once
	file_bazel_analysis_analysis_v2_proto_rawDescData []byte
)

func file_bazel_analysis_analysis_v2_proto_rawDescGZIP() []byte {
	file_bazel_analysis_analysis_v2_proto_rawDescOnce.Do(func() {
		file_bazel_analysis_analysis_v2_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_bazel_analysis_analysis_v2_proto_rawDesc), len(file_bazel_analysis_analysis_v2_proto_rawDesc)))
	})
	return file_bazel_analysis_analysis_v2_proto_rawDescData
}

var file_bazel_analysis_analysis_v2_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_bazel_analysis_analysis_v2_proto_goTypes = []any{
	(*ActionGraphContainer)(nil), // 0: bazel.ActionGraphContainer
	(*Artifact)(nil),             // 1: bazel.Artifact
	(*Action)(nil),               // 2: bazel.Action
	(*Target)(nil),               // 3: bazel.Target
	(*RuleClass)(nil),            // 4: bazel.RuleClass
	(*AspectDescriptor)(nil),     // 5: bazel.AspectDescriptor
	(*DepSetOfFiles)(nil),        // 6: bazel.DepSetOfFiles
	(*Configuration)(nil),        // 7: bazel.Configuration
	(*Fragment)(nil),             // 8: bazel.Fragment
	(*FragmentOptions)(nil),      // 9: bazel.FragmentOptions
	(*Option)(nil),               // 10: bazel.Option
	(*KeyValuePair)(nil),         // 11: bazel.KeyValuePair
	(*ConfiguredTarget)(nil),     // 12: bazel.ConfiguredTarget
	(*CqueryResult)(nil),         // 13: bazel.CqueryResult
	(*ParamFile)(nil),            // 14: bazel.ParamFile
	(*PathFragment)(nil),         // 15: bazel.PathFragment
	(*query.Target)(nil),         // 16: blaze_query_aspect_mirror.Target
}
var file_bazel_analysis_analysis_v2_proto_depIdxs = []int32{
	1,  // 0: bazel.ActionGraphContainer.artifacts:type_name -> bazel.Artifact
	2,  // 1: bazel.ActionGraphContainer.actions:type_name -> bazel.Action
	3,  // 2: bazel.ActionGraphContainer.targets:type_name -> bazel.Target
	6,  // 3: bazel.ActionGraphContainer.dep_set_of_files:type_name -> bazel.DepSetOfFiles
	7,  // 4: bazel.ActionGraphContainer.configuration:type_name -> bazel.Configuration
	5,  // 5: bazel.ActionGraphContainer.aspect_descriptors:type_name -> bazel.AspectDescriptor
	4,  // 6: bazel.ActionGraphContainer.rule_classes:type_name -> bazel.RuleClass
	15, // 7: bazel.ActionGraphContainer.path_fragments:type_name -> bazel.PathFragment
	11, // 8: bazel.Action.environment_variables:type_name -> bazel.KeyValuePair
	11, // 9: bazel.Action.execution_info:type_name -> bazel.KeyValuePair
	14, // 10: bazel.Action.param_files:type_name -> bazel.ParamFile
	11, // 11: bazel.Action.substitutions:type_name -> bazel.KeyValuePair
	11, // 12: bazel.AspectDescriptor.parameters:type_name -> bazel.KeyValuePair
	8,  // 13: bazel.Configuration.fragments:type_name -> bazel.Fragment
	9,  // 14: bazel.Configuration.fragment_options:type_name -> bazel.FragmentOptions
	10, // 15: bazel.FragmentOptions.options:type_name -> bazel.Option
	16, // 16: bazel.ConfiguredTarget.target:type_name -> blaze_query_aspect_mirror.Target
	7,  // 17: bazel.ConfiguredTarget.configuration:type_name -> bazel.Configuration
	12, // 18: bazel.CqueryResult.results:type_name -> bazel.ConfiguredTarget
	7,  // 19: bazel.CqueryResult.configurations:type_name -> bazel.Configuration
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_bazel_analysis_analysis_v2_proto_init() }
func file_bazel_analysis_analysis_v2_proto_init() {
	if File_bazel_analysis_analysis_v2_proto != nil {
		return
	}
	file_bazel_analysis_analysis_v2_proto_msgTypes[10].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_bazel_analysis_analysis_v2_proto_rawDesc), len(file_bazel_analysis_analysis_v2_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bazel_analysis_analysis_v2_proto_goTypes,
		DependencyIndexes: file_bazel_analysis_analysis_v2_proto_depIdxs,
		MessageInfos:      file_bazel_analysis_analysis_v2_proto_msgTypes,
	}.Build()
	File_bazel_analysis_analysis_v2_proto = out.File
	file_bazel_analysis_analysis_v2_proto_goTypes = nil
	file_bazel_analysis_analysis_v2_proto_depIdxs = nil
}
