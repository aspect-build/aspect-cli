// @generated by protoc-gen-es v2.2.3 with parameter "keep_empty_files=true,target=js+dts,js_import_style=legacy_commonjs"
// @generated from file bazel/command_line/command_line.proto (package command_line, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { OptionEffectTag, OptionMetadataTag } from "../options/option_filters_pb";

/**
 * Describes the file bazel/command_line/command_line.proto.
 */
export declare const file_bazel_command_line_command_line: GenFile;

/**
 * @generated from message command_line.CommandLine
 */
export declare type CommandLine = Message<"command_line.CommandLine"> & {
  /**
   * @generated from field: string command_line_label = 1;
   */
  commandLineLabel: string;

  /**
   * @generated from field: repeated command_line.CommandLineSection sections = 2;
   */
  sections: CommandLineSection[];
};

/**
 * Describes the message command_line.CommandLine.
 * Use `create(CommandLineSchema)` to create a new message.
 */
export declare const CommandLineSchema: GenMessage<CommandLine>;

/**
 * @generated from message command_line.CommandLineSection
 */
export declare type CommandLineSection = Message<"command_line.CommandLineSection"> & {
  /**
   * @generated from field: string section_label = 1;
   */
  sectionLabel: string;

  /**
   * @generated from oneof command_line.CommandLineSection.section_type
   */
  sectionType: {
    /**
     * @generated from field: command_line.ChunkList chunk_list = 2;
     */
    value: ChunkList;
    case: "chunkList";
  } | {
    /**
     * @generated from field: command_line.OptionList option_list = 3;
     */
    value: OptionList;
    case: "optionList";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message command_line.CommandLineSection.
 * Use `create(CommandLineSectionSchema)` to create a new message.
 */
export declare const CommandLineSectionSchema: GenMessage<CommandLineSection>;

/**
 * @generated from message command_line.ChunkList
 */
export declare type ChunkList = Message<"command_line.ChunkList"> & {
  /**
   * @generated from field: repeated string chunk = 1;
   */
  chunk: string[];
};

/**
 * Describes the message command_line.ChunkList.
 * Use `create(ChunkListSchema)` to create a new message.
 */
export declare const ChunkListSchema: GenMessage<ChunkList>;

/**
 * @generated from message command_line.OptionList
 */
export declare type OptionList = Message<"command_line.OptionList"> & {
  /**
   * @generated from field: repeated command_line.Option option = 1;
   */
  option: Option[];
};

/**
 * Describes the message command_line.OptionList.
 * Use `create(OptionListSchema)` to create a new message.
 */
export declare const OptionListSchema: GenMessage<OptionList>;

/**
 * @generated from message command_line.Option
 */
export declare type Option = Message<"command_line.Option"> & {
  /**
   * @generated from field: string combined_form = 1;
   */
  combinedForm: string;

  /**
   * @generated from field: string option_name = 2;
   */
  optionName: string;

  /**
   * @generated from field: string option_value = 3;
   */
  optionValue: string;

  /**
   * @generated from field: repeated options.OptionEffectTag effect_tags = 4;
   */
  effectTags: OptionEffectTag[];

  /**
   * @generated from field: repeated options.OptionMetadataTag metadata_tags = 5;
   */
  metadataTags: OptionMetadataTag[];
};

/**
 * Describes the message command_line.Option.
 * Use `create(OptionSchema)` to create a new message.
 */
export declare const OptionSchema: GenMessage<Option>;

