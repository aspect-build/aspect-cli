// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v5.27.3
// source: bazel/command_line/command_line.proto

package command_line

import (
	options "github.com/aspect-build/aspect-cli/bazel/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CommandLine struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	CommandLineLabel string                 `protobuf:"bytes,1,opt,name=command_line_label,json=commandLineLabel,proto3" json:"command_line_label,omitempty"`
	Sections         []*CommandLineSection  `protobuf:"bytes,2,rep,name=sections,proto3" json:"sections,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CommandLine) Reset() {
	*x = CommandLine{}
	mi := &file_bazel_command_line_command_line_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommandLine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandLine) ProtoMessage() {}

func (x *CommandLine) ProtoReflect() protoreflect.Message {
	mi := &file_bazel_command_line_command_line_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandLine.ProtoReflect.Descriptor instead.
func (*CommandLine) Descriptor() ([]byte, []int) {
	return file_bazel_command_line_command_line_proto_rawDescGZIP(), []int{0}
}

func (x *CommandLine) GetCommandLineLabel() string {
	if x != nil {
		return x.CommandLineLabel
	}
	return ""
}

func (x *CommandLine) GetSections() []*CommandLineSection {
	if x != nil {
		return x.Sections
	}
	return nil
}

type CommandLineSection struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	SectionLabel string                 `protobuf:"bytes,1,opt,name=section_label,json=sectionLabel,proto3" json:"section_label,omitempty"`
	// Types that are valid to be assigned to SectionType:
	//
	//	*CommandLineSection_ChunkList
	//	*CommandLineSection_OptionList
	SectionType   isCommandLineSection_SectionType `protobuf_oneof:"section_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommandLineSection) Reset() {
	*x = CommandLineSection{}
	mi := &file_bazel_command_line_command_line_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommandLineSection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandLineSection) ProtoMessage() {}

func (x *CommandLineSection) ProtoReflect() protoreflect.Message {
	mi := &file_bazel_command_line_command_line_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandLineSection.ProtoReflect.Descriptor instead.
func (*CommandLineSection) Descriptor() ([]byte, []int) {
	return file_bazel_command_line_command_line_proto_rawDescGZIP(), []int{1}
}

func (x *CommandLineSection) GetSectionLabel() string {
	if x != nil {
		return x.SectionLabel
	}
	return ""
}

func (x *CommandLineSection) GetSectionType() isCommandLineSection_SectionType {
	if x != nil {
		return x.SectionType
	}
	return nil
}

func (x *CommandLineSection) GetChunkList() *ChunkList {
	if x != nil {
		if x, ok := x.SectionType.(*CommandLineSection_ChunkList); ok {
			return x.ChunkList
		}
	}
	return nil
}

func (x *CommandLineSection) GetOptionList() *OptionList {
	if x != nil {
		if x, ok := x.SectionType.(*CommandLineSection_OptionList); ok {
			return x.OptionList
		}
	}
	return nil
}

type isCommandLineSection_SectionType interface {
	isCommandLineSection_SectionType()
}

type CommandLineSection_ChunkList struct {
	ChunkList *ChunkList `protobuf:"bytes,2,opt,name=chunk_list,json=chunkList,proto3,oneof"`
}

type CommandLineSection_OptionList struct {
	OptionList *OptionList `protobuf:"bytes,3,opt,name=option_list,json=optionList,proto3,oneof"`
}

func (*CommandLineSection_ChunkList) isCommandLineSection_SectionType() {}

func (*CommandLineSection_OptionList) isCommandLineSection_SectionType() {}

type ChunkList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chunk         []string               `protobuf:"bytes,1,rep,name=chunk,proto3" json:"chunk,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChunkList) Reset() {
	*x = ChunkList{}
	mi := &file_bazel_command_line_command_line_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChunkList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChunkList) ProtoMessage() {}

func (x *ChunkList) ProtoReflect() protoreflect.Message {
	mi := &file_bazel_command_line_command_line_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChunkList.ProtoReflect.Descriptor instead.
func (*ChunkList) Descriptor() ([]byte, []int) {
	return file_bazel_command_line_command_line_proto_rawDescGZIP(), []int{2}
}

func (x *ChunkList) GetChunk() []string {
	if x != nil {
		return x.Chunk
	}
	return nil
}

type OptionList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Option        []*Option              `protobuf:"bytes,1,rep,name=option,proto3" json:"option,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OptionList) Reset() {
	*x = OptionList{}
	mi := &file_bazel_command_line_command_line_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OptionList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptionList) ProtoMessage() {}

func (x *OptionList) ProtoReflect() protoreflect.Message {
	mi := &file_bazel_command_line_command_line_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OptionList.ProtoReflect.Descriptor instead.
func (*OptionList) Descriptor() ([]byte, []int) {
	return file_bazel_command_line_command_line_proto_rawDescGZIP(), []int{3}
}

func (x *OptionList) GetOption() []*Option {
	if x != nil {
		return x.Option
	}
	return nil
}

type Option struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	CombinedForm  string                      `protobuf:"bytes,1,opt,name=combined_form,json=combinedForm,proto3" json:"combined_form,omitempty"`
	OptionName    string                      `protobuf:"bytes,2,opt,name=option_name,json=optionName,proto3" json:"option_name,omitempty"`
	OptionValue   string                      `protobuf:"bytes,3,opt,name=option_value,json=optionValue,proto3" json:"option_value,omitempty"`
	EffectTags    []options.OptionEffectTag   `protobuf:"varint,4,rep,packed,name=effect_tags,json=effectTags,proto3,enum=options.OptionEffectTag" json:"effect_tags,omitempty"`
	MetadataTags  []options.OptionMetadataTag `protobuf:"varint,5,rep,packed,name=metadata_tags,json=metadataTags,proto3,enum=options.OptionMetadataTag" json:"metadata_tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Option) Reset() {
	*x = Option{}
	mi := &file_bazel_command_line_command_line_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Option) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Option) ProtoMessage() {}

func (x *Option) ProtoReflect() protoreflect.Message {
	mi := &file_bazel_command_line_command_line_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Option.ProtoReflect.Descriptor instead.
func (*Option) Descriptor() ([]byte, []int) {
	return file_bazel_command_line_command_line_proto_rawDescGZIP(), []int{4}
}

func (x *Option) GetCombinedForm() string {
	if x != nil {
		return x.CombinedForm
	}
	return ""
}

func (x *Option) GetOptionName() string {
	if x != nil {
		return x.OptionName
	}
	return ""
}

func (x *Option) GetOptionValue() string {
	if x != nil {
		return x.OptionValue
	}
	return ""
}

func (x *Option) GetEffectTags() []options.OptionEffectTag {
	if x != nil {
		return x.EffectTags
	}
	return nil
}

func (x *Option) GetMetadataTags() []options.OptionMetadataTag {
	if x != nil {
		return x.MetadataTags
	}
	return nil
}

var File_bazel_command_line_command_line_proto protoreflect.FileDescriptor

const file_bazel_command_line_command_line_proto_rawDesc = "" +
	"\n" +
	"%bazel/command_line/command_line.proto\x12\fcommand_line\x1a\"bazel/options/option_filters.proto\"y\n" +
	"\vCommandLine\x12,\n" +
	"\x12command_line_label\x18\x01 \x01(\tR\x10commandLineLabel\x12<\n" +
	"\bsections\x18\x02 \x03(\v2 .command_line.CommandLineSectionR\bsections\"\xc0\x01\n" +
	"\x12CommandLineSection\x12#\n" +
	"\rsection_label\x18\x01 \x01(\tR\fsectionLabel\x128\n" +
	"\n" +
	"chunk_list\x18\x02 \x01(\v2\x17.command_line.ChunkListH\x00R\tchunkList\x12;\n" +
	"\voption_list\x18\x03 \x01(\v2\x18.command_line.OptionListH\x00R\n" +
	"optionListB\x0e\n" +
	"\fsection_type\"!\n" +
	"\tChunkList\x12\x14\n" +
	"\x05chunk\x18\x01 \x03(\tR\x05chunk\":\n" +
	"\n" +
	"OptionList\x12,\n" +
	"\x06option\x18\x01 \x03(\v2\x14.command_line.OptionR\x06option\"\xed\x01\n" +
	"\x06Option\x12#\n" +
	"\rcombined_form\x18\x01 \x01(\tR\fcombinedForm\x12\x1f\n" +
	"\voption_name\x18\x02 \x01(\tR\n" +
	"optionName\x12!\n" +
	"\foption_value\x18\x03 \x01(\tR\voptionValue\x129\n" +
	"\veffect_tags\x18\x04 \x03(\x0e2\x18.options.OptionEffectTagR\n" +
	"effectTags\x12?\n" +
	"\rmetadata_tags\x18\x05 \x03(\x0e2\x1a.options.OptionMetadataTagR\fmetadataTagsb\x06proto3"

var (
	file_bazel_command_line_command_line_proto_rawDescOnce sync.Once
	file_bazel_command_line_command_line_proto_rawDescData []byte
)

func file_bazel_command_line_command_line_proto_rawDescGZIP() []byte {
	file_bazel_command_line_command_line_proto_rawDescOnce.Do(func() {
		file_bazel_command_line_command_line_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_bazel_command_line_command_line_proto_rawDesc), len(file_bazel_command_line_command_line_proto_rawDesc)))
	})
	return file_bazel_command_line_command_line_proto_rawDescData
}

var file_bazel_command_line_command_line_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_bazel_command_line_command_line_proto_goTypes = []any{
	(*CommandLine)(nil),            // 0: command_line.CommandLine
	(*CommandLineSection)(nil),     // 1: command_line.CommandLineSection
	(*ChunkList)(nil),              // 2: command_line.ChunkList
	(*OptionList)(nil),             // 3: command_line.OptionList
	(*Option)(nil),                 // 4: command_line.Option
	(options.OptionEffectTag)(0),   // 5: options.OptionEffectTag
	(options.OptionMetadataTag)(0), // 6: options.OptionMetadataTag
}
var file_bazel_command_line_command_line_proto_depIdxs = []int32{
	1, // 0: command_line.CommandLine.sections:type_name -> command_line.CommandLineSection
	2, // 1: command_line.CommandLineSection.chunk_list:type_name -> command_line.ChunkList
	3, // 2: command_line.CommandLineSection.option_list:type_name -> command_line.OptionList
	4, // 3: command_line.OptionList.option:type_name -> command_line.Option
	5, // 4: command_line.Option.effect_tags:type_name -> options.OptionEffectTag
	6, // 5: command_line.Option.metadata_tags:type_name -> options.OptionMetadataTag
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_bazel_command_line_command_line_proto_init() }
func file_bazel_command_line_command_line_proto_init() {
	if File_bazel_command_line_command_line_proto != nil {
		return
	}
	file_bazel_command_line_command_line_proto_msgTypes[1].OneofWrappers = []any{
		(*CommandLineSection_ChunkList)(nil),
		(*CommandLineSection_OptionList)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_bazel_command_line_command_line_proto_rawDesc), len(file_bazel_command_line_command_line_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bazel_command_line_command_line_proto_goTypes,
		DependencyIndexes: file_bazel_command_line_command_line_proto_depIdxs,
		MessageInfos:      file_bazel_command_line_command_line_proto_msgTypes,
	}.Build()
	File_bazel_command_line_command_line_proto = out.File
	file_bazel_command_line_command_line_proto_goTypes = nil
	file_bazel_command_line_command_line_proto_depIdxs = nil
}
