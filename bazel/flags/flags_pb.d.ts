// @generated by protoc-gen-es v1.10.0 with parameter "keep_empty_files=true,target=js+dts,js_import_style=legacy_commonjs"
// @generated from file bazel/flags/flags.proto (package bazel, syntax proto2)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto2 } from "@bufbuild/protobuf";

/**
 * @generated from message bazel.FlagInfo
 */
export declare class FlagInfo extends Message<FlagInfo> {
  /**
   * @generated from field: required string name = 1;
   */
  name?: string;

  /**
   * @generated from field: optional bool has_negative_flag = 2 [default = false];
   */
  hasNegativeFlag?: boolean;

  /**
   * @generated from field: optional string documentation = 3;
   */
  documentation?: string;

  /**
   * @generated from field: repeated string commands = 4;
   */
  commands: string[];

  /**
   * @generated from field: optional string abbreviation = 5;
   */
  abbreviation?: string;

  /**
   * @generated from field: optional bool allows_multiple = 6 [default = false];
   */
  allowsMultiple?: boolean;

  /**
   * @generated from field: repeated string effect_tags = 7;
   */
  effectTags: string[];

  /**
   * @generated from field: repeated string metadata_tags = 8;
   */
  metadataTags: string[];

  /**
   * @generated from field: optional string documentation_category = 9;
   */
  documentationCategory?: string;

  /**
   * @generated from field: optional bool requires_value = 10;
   */
  requiresValue?: boolean;

  constructor(data?: PartialMessage<FlagInfo>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "bazel.FlagInfo";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FlagInfo;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FlagInfo;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FlagInfo;

  static equals(a: FlagInfo | PlainMessage<FlagInfo> | undefined, b: FlagInfo | PlainMessage<FlagInfo> | undefined): boolean;
}

/**
 * @generated from message bazel.FlagCollection
 */
export declare class FlagCollection extends Message<FlagCollection> {
  /**
   * @generated from field: repeated bazel.FlagInfo flag_infos = 1;
   */
  flagInfos: FlagInfo[];

  constructor(data?: PartialMessage<FlagCollection>);

  static readonly runtime: typeof proto2;
  static readonly typeName = "bazel.FlagCollection";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FlagCollection;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FlagCollection;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FlagCollection;

  static equals(a: FlagCollection | PlainMessage<FlagCollection> | undefined, b: FlagCollection | PlainMessage<FlagCollection> | undefined): boolean;
}

