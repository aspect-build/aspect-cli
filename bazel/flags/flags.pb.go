// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v5.27.3
// source: bazel/flags/flags.proto

package flags

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FlagInfo struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	Name                  *string                `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	HasNegativeFlag       *bool                  `protobuf:"varint,2,opt,name=has_negative_flag,json=hasNegativeFlag,def=0" json:"has_negative_flag,omitempty"`
	Documentation         *string                `protobuf:"bytes,3,opt,name=documentation" json:"documentation,omitempty"`
	Commands              []string               `protobuf:"bytes,4,rep,name=commands" json:"commands,omitempty"`
	Abbreviation          *string                `protobuf:"bytes,5,opt,name=abbreviation" json:"abbreviation,omitempty"`
	AllowsMultiple        *bool                  `protobuf:"varint,6,opt,name=allows_multiple,json=allowsMultiple,def=0" json:"allows_multiple,omitempty"`
	EffectTags            []string               `protobuf:"bytes,7,rep,name=effect_tags,json=effectTags" json:"effect_tags,omitempty"`
	MetadataTags          []string               `protobuf:"bytes,8,rep,name=metadata_tags,json=metadataTags" json:"metadata_tags,omitempty"`
	DocumentationCategory *string                `protobuf:"bytes,9,opt,name=documentation_category,json=documentationCategory" json:"documentation_category,omitempty"`
	RequiresValue         *bool                  `protobuf:"varint,10,opt,name=requires_value,json=requiresValue" json:"requires_value,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

// Default values for FlagInfo fields.
const (
	Default_FlagInfo_HasNegativeFlag = bool(false)
	Default_FlagInfo_AllowsMultiple  = bool(false)
)

func (x *FlagInfo) Reset() {
	*x = FlagInfo{}
	mi := &file_bazel_flags_flags_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FlagInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlagInfo) ProtoMessage() {}

func (x *FlagInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bazel_flags_flags_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlagInfo.ProtoReflect.Descriptor instead.
func (*FlagInfo) Descriptor() ([]byte, []int) {
	return file_bazel_flags_flags_proto_rawDescGZIP(), []int{0}
}

func (x *FlagInfo) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *FlagInfo) GetHasNegativeFlag() bool {
	if x != nil && x.HasNegativeFlag != nil {
		return *x.HasNegativeFlag
	}
	return Default_FlagInfo_HasNegativeFlag
}

func (x *FlagInfo) GetDocumentation() string {
	if x != nil && x.Documentation != nil {
		return *x.Documentation
	}
	return ""
}

func (x *FlagInfo) GetCommands() []string {
	if x != nil {
		return x.Commands
	}
	return nil
}

func (x *FlagInfo) GetAbbreviation() string {
	if x != nil && x.Abbreviation != nil {
		return *x.Abbreviation
	}
	return ""
}

func (x *FlagInfo) GetAllowsMultiple() bool {
	if x != nil && x.AllowsMultiple != nil {
		return *x.AllowsMultiple
	}
	return Default_FlagInfo_AllowsMultiple
}

func (x *FlagInfo) GetEffectTags() []string {
	if x != nil {
		return x.EffectTags
	}
	return nil
}

func (x *FlagInfo) GetMetadataTags() []string {
	if x != nil {
		return x.MetadataTags
	}
	return nil
}

func (x *FlagInfo) GetDocumentationCategory() string {
	if x != nil && x.DocumentationCategory != nil {
		return *x.DocumentationCategory
	}
	return ""
}

func (x *FlagInfo) GetRequiresValue() bool {
	if x != nil && x.RequiresValue != nil {
		return *x.RequiresValue
	}
	return false
}

type FlagCollection struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FlagInfos     []*FlagInfo            `protobuf:"bytes,1,rep,name=flag_infos,json=flagInfos" json:"flag_infos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FlagCollection) Reset() {
	*x = FlagCollection{}
	mi := &file_bazel_flags_flags_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FlagCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlagCollection) ProtoMessage() {}

func (x *FlagCollection) ProtoReflect() protoreflect.Message {
	mi := &file_bazel_flags_flags_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlagCollection.ProtoReflect.Descriptor instead.
func (*FlagCollection) Descriptor() ([]byte, []int) {
	return file_bazel_flags_flags_proto_rawDescGZIP(), []int{1}
}

func (x *FlagCollection) GetFlagInfos() []*FlagInfo {
	if x != nil {
		return x.FlagInfos
	}
	return nil
}

var File_bazel_flags_flags_proto protoreflect.FileDescriptor

const file_bazel_flags_flags_proto_rawDesc = "" +
	"\n" +
	"\x17bazel/flags/flags.proto\x12\x05bazel\"\x8b\x03\n" +
	"\bFlagInfo\x12\x12\n" +
	"\x04name\x18\x01 \x02(\tR\x04name\x121\n" +
	"\x11has_negative_flag\x18\x02 \x01(\b:\x05falseR\x0fhasNegativeFlag\x12$\n" +
	"\rdocumentation\x18\x03 \x01(\tR\rdocumentation\x12\x1a\n" +
	"\bcommands\x18\x04 \x03(\tR\bcommands\x12\"\n" +
	"\fabbreviation\x18\x05 \x01(\tR\fabbreviation\x12.\n" +
	"\x0fallows_multiple\x18\x06 \x01(\b:\x05falseR\x0eallowsMultiple\x12\x1f\n" +
	"\veffect_tags\x18\a \x03(\tR\n" +
	"effectTags\x12#\n" +
	"\rmetadata_tags\x18\b \x03(\tR\fmetadataTags\x125\n" +
	"\x16documentation_category\x18\t \x01(\tR\x15documentationCategory\x12%\n" +
	"\x0erequires_value\x18\n" +
	" \x01(\bR\rrequiresValue\"@\n" +
	"\x0eFlagCollection\x12.\n" +
	"\n" +
	"flag_infos\x18\x01 \x03(\v2\x0f.bazel.FlagInfoR\tflagInfosBG\n" +
	"4com.google.devtools.build.lib.runtime.commands.protoB\x0fBazelFlagsProto"

var (
	file_bazel_flags_flags_proto_rawDescOnce sync.Once
	file_bazel_flags_flags_proto_rawDescData []byte
)

func file_bazel_flags_flags_proto_rawDescGZIP() []byte {
	file_bazel_flags_flags_proto_rawDescOnce.Do(func() {
		file_bazel_flags_flags_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_bazel_flags_flags_proto_rawDesc), len(file_bazel_flags_flags_proto_rawDesc)))
	})
	return file_bazel_flags_flags_proto_rawDescData
}

var file_bazel_flags_flags_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_bazel_flags_flags_proto_goTypes = []any{
	(*FlagInfo)(nil),       // 0: bazel.FlagInfo
	(*FlagCollection)(nil), // 1: bazel.FlagCollection
}
var file_bazel_flags_flags_proto_depIdxs = []int32{
	0, // 0: bazel.FlagCollection.flag_infos:type_name -> bazel.FlagInfo
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_bazel_flags_flags_proto_init() }
func file_bazel_flags_flags_proto_init() {
	if File_bazel_flags_flags_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_bazel_flags_flags_proto_rawDesc), len(file_bazel_flags_flags_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bazel_flags_flags_proto_goTypes,
		DependencyIndexes: file_bazel_flags_flags_proto_depIdxs,
		MessageInfos:      file_bazel_flags_flags_proto_msgTypes,
	}.Build()
	File_bazel_flags_flags_proto = out.File
	file_bazel_flags_flags_proto_goTypes = nil
	file_bazel_flags_flags_proto_depIdxs = nil
}
