// @generated by protoc-gen-es v2.2.3 with parameter "keep_empty_files=true,target=js+dts,js_import_style=legacy_commonjs"
// @generated from file bazel/invocation_policy/invocation_policy.proto (package invocation_policy, syntax proto2)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file bazel/invocation_policy/invocation_policy.proto.
 */
export declare const file_bazel_invocation_policy_invocation_policy: GenFile;

/**
 * @generated from message invocation_policy.InvocationPolicy
 */
export declare type InvocationPolicy = Message<"invocation_policy.InvocationPolicy"> & {
  /**
   * @generated from field: repeated invocation_policy.FlagPolicy flag_policies = 1;
   */
  flagPolicies: FlagPolicy[];
};

/**
 * Describes the message invocation_policy.InvocationPolicy.
 * Use `create(InvocationPolicySchema)` to create a new message.
 */
export declare const InvocationPolicySchema: GenMessage<InvocationPolicy>;

/**
 * @generated from message invocation_policy.FlagPolicy
 */
export declare type FlagPolicy = Message<"invocation_policy.FlagPolicy"> & {
  /**
   * @generated from field: optional string flag_name = 1;
   */
  flagName: string;

  /**
   * @generated from field: repeated string commands = 2;
   */
  commands: string[];

  /**
   * @generated from oneof invocation_policy.FlagPolicy.operation
   */
  operation: {
    /**
     * @generated from field: invocation_policy.SetValue set_value = 3;
     */
    value: SetValue;
    case: "setValue";
  } | {
    /**
     * @generated from field: invocation_policy.UseDefault use_default = 4;
     */
    value: UseDefault;
    case: "useDefault";
  } | {
    /**
     * @generated from field: invocation_policy.DisallowValues disallow_values = 5;
     */
    value: DisallowValues;
    case: "disallowValues";
  } | {
    /**
     * @generated from field: invocation_policy.AllowValues allow_values = 6;
     */
    value: AllowValues;
    case: "allowValues";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message invocation_policy.FlagPolicy.
 * Use `create(FlagPolicySchema)` to create a new message.
 */
export declare const FlagPolicySchema: GenMessage<FlagPolicy>;

/**
 * @generated from message invocation_policy.SetValue
 */
export declare type SetValue = Message<"invocation_policy.SetValue"> & {
  /**
   * @generated from field: repeated string flag_value = 1;
   */
  flagValue: string[];

  /**
   * @generated from field: optional invocation_policy.SetValue.Behavior behavior = 4;
   */
  behavior: SetValue_Behavior;
};

/**
 * Describes the message invocation_policy.SetValue.
 * Use `create(SetValueSchema)` to create a new message.
 */
export declare const SetValueSchema: GenMessage<SetValue>;

/**
 * @generated from enum invocation_policy.SetValue.Behavior
 */
export enum SetValue_Behavior {
  /**
   * @generated from enum value: UNDEFINED = 0;
   */
  UNDEFINED = 0,

  /**
   * @generated from enum value: ALLOW_OVERRIDES = 1;
   */
  ALLOW_OVERRIDES = 1,

  /**
   * @generated from enum value: APPEND = 2;
   */
  APPEND = 2,

  /**
   * @generated from enum value: FINAL_VALUE_IGNORE_OVERRIDES = 3;
   */
  FINAL_VALUE_IGNORE_OVERRIDES = 3,
}

/**
 * Describes the enum invocation_policy.SetValue.Behavior.
 */
export declare const SetValue_BehaviorSchema: GenEnum<SetValue_Behavior>;

/**
 * @generated from message invocation_policy.UseDefault
 */
export declare type UseDefault = Message<"invocation_policy.UseDefault"> & {
};

/**
 * Describes the message invocation_policy.UseDefault.
 * Use `create(UseDefaultSchema)` to create a new message.
 */
export declare const UseDefaultSchema: GenMessage<UseDefault>;

/**
 * @generated from message invocation_policy.DisallowValues
 */
export declare type DisallowValues = Message<"invocation_policy.DisallowValues"> & {
  /**
   * @generated from field: repeated string disallowed_values = 1;
   */
  disallowedValues: string[];

  /**
   * @generated from oneof invocation_policy.DisallowValues.replacement_value
   */
  replacementValue: {
    /**
     * @generated from field: string new_value = 3;
     */
    value: string;
    case: "newValue";
  } | {
    /**
     * @generated from field: invocation_policy.UseDefault use_default = 4;
     */
    value: UseDefault;
    case: "useDefault";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message invocation_policy.DisallowValues.
 * Use `create(DisallowValuesSchema)` to create a new message.
 */
export declare const DisallowValuesSchema: GenMessage<DisallowValues>;

/**
 * @generated from message invocation_policy.AllowValues
 */
export declare type AllowValues = Message<"invocation_policy.AllowValues"> & {
  /**
   * @generated from field: repeated string allowed_values = 1;
   */
  allowedValues: string[];

  /**
   * @generated from oneof invocation_policy.AllowValues.replacement_value
   */
  replacementValue: {
    /**
     * @generated from field: string new_value = 3;
     */
    value: string;
    case: "newValue";
  } | {
    /**
     * @generated from field: invocation_policy.UseDefault use_default = 4;
     */
    value: UseDefault;
    case: "useDefault";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message invocation_policy.AllowValues.
 * Use `create(AllowValuesSchema)` to create a new message.
 */
export declare const AllowValuesSchema: GenMessage<AllowValues>;

