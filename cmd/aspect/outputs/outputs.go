/*
 * Copyright 2022 Aspect Build Systems, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package outputs

import (
	"github.com/spf13/cobra"

	"aspect.build/cli/pkg/aspect/outputs"
	"aspect.build/cli/pkg/aspect/root/flags"
	"aspect.build/cli/pkg/interceptors"
	"aspect.build/cli/pkg/ioutils"
)

func NewDefaultOutputsCmd() *cobra.Command {
	return NewOutputsCmd(ioutils.DefaultStreams)
}

func NewOutputsCmd(streams ioutils.Streams) *cobra.Command {
	cmd := &cobra.Command{
		Use:   "outputs <target> [mnemonic]",
		Short: "Print paths to declared output files",
		Long: `Queries for the outputs declared by actions generated by the given target.

Prints each output file on a line, with the mnemonic of the action that produces it,
followed by a path to the file, relative to the workspace root.

You can optionally provide an extra argument, which is a filter on the mnemonic.`,
		Example: `# Show all outputs of the //cli/pro target, which is a go_binary:

% aspect outputs //cli/pro
 
GoCompilePkg bazel-out/k8-fastbuild/bin/cli/pro/pro.a
GoCompilePkg bazel-out/k8-fastbuild/bin/cli/pro/pro.x
GoLink bazel-out/k8-fastbuild/bin/cli/pro/pro_/pro
SourceSymlinkManifest bazel-out/k8-fastbuild/bin/cli/pro/pro_/pro.runfiles_manifest
SymlinkTree bazel-out/k8-fastbuild/bin/cli/pro/pro_/pro.runfiles/MANIFEST
Middleman bazel-out/k8-fastbuild/internal/_middlemen/cli_Spro_Spro_U_Spro-runfiles

# Show just the output of the GoLink action, which is the executable produced by a go_binary:

% aspect outputs //cli/pro GoLink
bazel-out/k8-fastbuild/bin/cli/pro/pro_/pro`,
		GroupID: "aspect",
		RunE: interceptors.Run(
			[]interceptors.Interceptor{
				flags.FlagsInterceptor(streams),
			},
			outputs.New(streams).Run,
		),
	}
	return cmd
}
