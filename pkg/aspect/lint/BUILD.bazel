load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "lint",
    srcs = [
        "bep.go",
        "diagnostic.go",
        "lint.go",
        "linthandler.go",
        "sarif.go",
    ],
    importpath = "github.com/aspect-build/aspect-cli/pkg/aspect/lint",
    visibility = ["//visibility:public"],
    deps = [
        "//bazel/buildeventstream",
        "//pkg/aspect/lint/diagnostic",
        "//pkg/aspect/root/flags",
        "//pkg/aspecterrors",
        "//pkg/bazel",
        "//pkg/bazel/workspace",
        "//pkg/ioutils",
        "//pkg/plugin/system/bep",
        "//util/flags",
        "@com_github_bluekeyes_go_gitdiff//gitdiff",
        "@com_github_charmbracelet_huh//:huh",
        "@com_github_fatih_color//:color",
        "@com_github_reviewdog_errorformat//:errorformat",
        "@com_github_reviewdog_errorformat//fmts",
        "@com_github_reviewdog_errorformat//writer",
        "@com_github_reviewdog_reviewdog//parser",
        "@com_github_sourcegraph_go_diff//diff",
        "@com_github_spf13_cobra//:cobra",
        "@com_github_spf13_pflag//:pflag",
        "@com_github_spf13_viper//:viper",
        "@org_golang_google_protobuf//encoding/protojson",
    ],
)

go_test(
    name = "lint_test",
    srcs = [
        "diagnostic_test.go",
        "helpers_test.go",
        "lint_test.go",
        "linthandler_test.go",
        "sarif_test.go",
        "statics_test.go",
    ],
    data = ["//pkg/aspect/lint/testdata/golden_files"],
    embed = [":lint"],
    embedsrcs = ["//pkg/aspect/lint/testdata/lint_result"],  # keep
    deps = [
        "//pkg/aspect/lint/diagnostic",
        "//pkg/aspect/root/config",
        "//pkg/aspect/root/flags",
        "//pkg/bazel/mock",
        "//pkg/ioutils",
        "@com_github_golang_mock//gomock",
        "@com_github_onsi_gomega//:gomega",
        "@com_github_spf13_cobra//:cobra",
        "@com_github_spf13_viper//:viper",
        "@tools_gotest_v3//golden",
    ],
)
