diff --git a/config/config.go b/config/config.go
index 23b1083..1841650 100644
--- a/config/config.go
+++ b/config/config.go
@@ -121,6 +121,7 @@ type MappedKind struct {
 }
 
 const ASPECT_WALKSUBDIR = "__aspect:walksubdir"
+const ASPECT_GITIGNORE = "__aspect:gitignore"
 
 func New() *Config {
 	return &Config{
diff --git a/walk/config.go b/walk/config.go
index c8dd6b3..be59f8c 100644
--- a/walk/config.go
+++ b/walk/config.go
@@ -112,6 +112,7 @@ func (cr *Configurer) Configure(c *config.Config, rel string, f *rule.File) {
 }
 
 type isIgnoredFunc = func(string) bool
+type isGitIgnoredFunc = func(string, bool) bool
 
 var nothingIgnored isIgnoredFunc = func(string) bool { return false }
 
diff --git a/walk/walk.go b/walk/walk.go
index 78e5874..45fe869 100644
--- a/walk/walk.go
+++ b/walk/walk.go
@@ -155,6 +155,14 @@ func visit(c *config.Config, cexts []config.Configurer, knownDirectives map[stri
 		return nil, false
 	}
 
+	// PATCH(gitignore) ---
+	var isGitIgnored isGitIgnoredFunc
+	isGitIgnoredExt, hasGitIgnore := c.Exts[config.ASPECT_GITIGNORE]
+	if hasGitIgnore && isGitIgnoredExt != nil {
+		isGitIgnored = isGitIgnoredExt.(isGitIgnoredFunc)
+	}
+	// END PATCH(gitignore) ---
+
 	// Filter and collect files
 	var regularFiles []string
 	for _, ent := range trie.files {
@@ -163,6 +171,13 @@ func visit(c *config.Config, cexts []config.Configurer, knownDirectives map[stri
 		if wc.isExcluded(entRel) {
 			continue
 		}
+		// PATCH(gitignore) ---
+		// NOTE: .gitignore must be applied *before* symlinks are followed
+		// See notes on symlink examples at https://git-scm.com/docs/gitignore#_examples
+		if isGitIgnored != nil && isGitIgnored(entRel, ent.IsDir()) {
+			continue
+		}
+		// END PATCH(gitignore) ---
 		if ent := resolveFileInfo(wc, dir, entRel, ent); ent != nil {
 			regularFiles = append(regularFiles, base)
 		}
