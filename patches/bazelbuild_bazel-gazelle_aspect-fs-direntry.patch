diff --git a/walk/walk.go b/walk/walk.go
index 5503ee7..3a6de86 100644
--- a/walk/walk.go
+++ b/walk/walk.go
@@ -140,6 +140,17 @@ func Walk(c *config.Config, cexts []config.Configurer, dirs []string, mode Mode,
 func visit(c *config.Config, cexts []config.Configurer, knownDirectives map[string]bool, updateRels *UpdateFilter, trie *pathTrie, wf WalkFunc, rel string, updateParent bool) ([]string, bool) {
 	haveError := false
 
+	// PATCH(fs.DirEntry map) ---
+	entsMap := make(map[string]fs.DirEntry, len(trie.children))
+	for _, node := range trie.children {
+		entsMap[node.entry.Name()] = node.entry
+	}
+	for _, node := range trie.files {
+		entsMap[node.Name()] = node
+	}
+	c.Exts["__aspect:direntries"] = entsMap
+	// END PATCH(fs.DirEntry map) ---
+
 	// Absolute path to the directory being visited
 	dir := filepath.Join(c.RepoRoot, rel)
 
@@ -194,6 +205,11 @@ func visit(c *config.Config, cexts []config.Configurer, knownDirectives map[stri
 				subFiles, shouldMerge := visit(c.Clone(), cexts, knownDirectives, updateRels, t, wf, entRel, shouldUpdate)
 				if shouldMerge {
 					for _, f := range subFiles {
+						// PATCH(fs.DirEntry map) ---
+						// TODO: this part of the patch can be removed once https://github.com/bazel-contrib/bazel-gazelle/pull/1928 lands
+						entsMap[path.Join(base, f)] = nil
+						// END PATCH(fs.DirEntry map) ---
+
 						regularFiles = append(regularFiles, path.Join(base, f))
 					}
 				} else {
