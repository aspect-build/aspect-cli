load("@aspect_bazel_lib//lib:expand_template.bzl", "expand_template")
load("@bazel_skylib//:bzl_library.bzl", "bzl_library")
load(":bazelisk_artifacts.bzl", "bazelisk_artifacts")
load(":release.bzl", "multi_platform_binaries", "release")

multi_platform_binaries(
    name = "aspect",
    embed = ["//cmd/aspect:aspect_lib"],
    tags = ["manual"],
)

expand_template(
    name = "aspect_version_file",
    out = "aspect_version",
    stamp_substitutions = {
        "0.0.0-PLACEHOLDER": "{{STABLE_ASPECT_CLI_BAZELISK_COMPAT_VERSION}}",
    },
    template = ["0.0.0-PLACEHOLDER"],
)

bazelisk_artifacts(
    name = "aspect_bazelisk_artifacts",
    darwin_arm64 = ":aspect-macos-aarch64",
    darwin_x86_64 = ":aspect-macos-x86_64",
    linux_arm64 = ":aspect-linux-aarch64",
    linux_x86_64 = ":aspect-linux-x86_64",
    tags = ["manual"],
    version_file = ":aspect_version",
)

release(
    name = "release",
    tags = ["manual"],
    targets = [
        ":aspect",
        ":aspect_bazelisk_artifacts",
    ],
)

bzl_library(
    name = "platforms",
    srcs = ["platforms.bzl"],
    visibility = ["//visibility:public"],
)

# Demonstration delivery target for Aspect Workflows.
# In the future this could be wired up to push dev releases to an S3 bucket.
sh_binary(
    name = "aspect_cli_delivery",
    srcs = ["delivery.sh"],
    data = [
        ":aspect",
        ":aspect_bazelisk_artifacts",
    ],
)

# Demonstration delivery target for Aspect Workflows.
# In the future this could be wired up to push dev releases to an S3 bucket.
sh_binary(
    name = "aspect_cli_delivery_only_on_change",
    srcs = ["delivery.sh"],
    data = [
        ":aspect",
        ":aspect_bazelisk_artifacts",
    ],
    tags = ["deliverable"],
)
